Object type,Attribute name,Data type,I/O,License,Version added,Description
reservoir,latitude,double,Input,SHOP_OPEN,13.0.0.a,"Reserved for future use (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,longitude,double,Input,SHOP_OPEN,13.0.0.a,"Reserved for future use (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,max_vol,double,Input,SHOP_OPEN,13.0.0.a,"Maximum volume of the reservoir (xUnit: MM3, yUnit: MM3)"
reservoir,lrl,double,Input,SHOP_OPEN,13.0.0.a,"Lowest Regulation Level (meter above sea level) of the reservoir (xUnit: METER, yUnit: METER)"
reservoir,hrl,double,Input,SHOP_OPEN,13.0.0.a,"Highest Regulation Level (meter above sea level) of the reservoir (xUnit: METER, yUnit: METER)"
reservoir,vol_head,xy,Input,SHOP_OPEN,13.0.0.a,"The volume (Mm3) and water level (meter above sea level) relation of the reservoir (xUnit: MM3, yUnit: METER)"
reservoir,elevation_adjustment,txy,Input,SHOP_ELEVATION_ADJUSTMENT,13.0.0.a,"Adjustment for the lowest regulation level (lrl), highest regulation level (hrl), and the volume (Mm3) and water level (meter above sea level) relation of the reservoir (xUnit: NO_UNIT, yUnit: METER)"
reservoir,start_vol,double,Input,SHOP_OPEN,13.0.0.a,"Reservoir start volume (xUnit: MM3, yUnit: MM3)"
reservoir,start_head,double,Input,SHOP_OPEN,13.0.0.a,"Reservoir start water level (meter above sea level) (xUnit: METER, yUnit: METER)"
reservoir,inflow,txy,Input,SHOP_OPEN,13.0.0.a,"Inflow to reservoir (xUnit: NO_UNIT, yUnit: M3/S)"
reservoir,inflow_flag,txy,Input,SHOP_OPEN,13.2.0.a,"Flag determining whether the inflow to a reservoir should be used as input or calculated as output in the simulation: 0 = input; 1 = output (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,sim_inflow_flag,txy,Input,SHOP_SIMULATION,13.0.0.a,"Flag determining whether inflow should be simulated to reservoir or not (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,flow_descr,xy,Input,SHOP_OPEN,13.0.0.a,"The water level (meter above sea level) and overflow (m3/s) relation of the reservoir (xUnit: METER, yUnit: M3/S)"
reservoir,overflow_mip_flag,txy,Input,SHOP_OVERFLOW_MIP,13.0.0.a,"Flag determining whether the binary variables should be used to prevent non-physical spill (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,overflow_cost,txy,Input,SHOP_OVERFLOW_COST,13.0.0.a,"Overflow cost for the reservoir (xUnit: NO_UNIT, yUnit: NOK/MM3)"
reservoir,overflow_cost_flag,txy,Input,SHOP_OVERFLOW_COST,13.0.0.a,"Flag determining whether overflow cost for this reservoir should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,min_vol_constr,txy,Input,SHOP_OPEN,13.0.0.a,"Time-dependent minimum volume limit for the reservoir (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,min_vol_constr_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the time-dependent minimum volume limit for the reservoir should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,max_vol_constr,txy,Input,SHOP_OPEN,13.0.0.a,"Time-dependent maximum volume limit for the reservoir (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,max_vol_constr_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the time-dependent maximum volume limit for the reservoir should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,min_head_constr,txy,Input,SHOP_OPEN,14.0.0.1,"Time-dependent minimum water level limit for the reservoir. The min_vol_constr attribute is preferred if it is present for the same reservoir. (xUnit: NO_UNIT, yUnit: METER)"
reservoir,min_head_constr_flag,txy,Input,SHOP_OPEN,14.0.0.1,"Flag determining whether the time-dependent minimum water level limit for the reservoir should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,max_head_constr,txy,Input,SHOP_OPEN,14.0.0.1,"Time-dependent maximum water level limit for the reservoir. The max_vol_constr attribute is preferred if it is present for the same reservoir. (xUnit: NO_UNIT, yUnit: METER)"
reservoir,max_head_constr_flag,txy,Input,SHOP_OPEN,14.0.0.1,"Flag determining whether the time-dependent maximum water level limit for the reservoir should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,tactical_limit_min,txy,Input,SHOP_TACTICAL_LIMIT,13.0.0.a,"Tactical minimum volume limit for the reservoir (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,tactical_limit_min_flag,txy,Input,SHOP_TACTICAL_LIMIT,13.0.0.a,"Flag determining whether the tactical minimum volume limit should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,tactical_cost_min,txy,Input,SHOP_TACTICAL_LIMIT,13.0.0.a,"Given penalty cost for violating the tactical minimum volume limit for the reservoir (xUnit: NO_UNIT, yUnit: NOK/MM3H)"
reservoir,tactical_cost_min_flag,txy,Input,SHOP_TACTICAL_LIMIT,13.0.0.a,"Flag determining whether the penalty cost for violating the tactical minimum volume limit should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,tactical_limit_max,txy,Input,SHOP_TACTICAL_LIMIT,13.0.0.a,"Tactical maximum volume limit for the reservoir (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,tactical_limit_max_flag,txy,Input,SHOP_TACTICAL_LIMIT,13.0.0.a,"Flag determining whether the tactical maximum volume limit should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,tactical_cost_max,txy,Input,SHOP_TACTICAL_LIMIT,13.0.0.a,"Given penalty cost for violating the tactical maximum volume limit for the reservoir (xUnit: NO_UNIT, yUnit: NOK/MM3H)"
reservoir,tactical_cost_max_flag,txy,Input,SHOP_TACTICAL_LIMIT,13.0.0.a,"Flag determining whether the penalty cost for violating the tactical maximum volume limit should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,upper_slack,txy,Input,SHOP_OPEN,13.0.0.a,"Value used for expanding end reservoir volume range above maximum reference volume in cuts (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,lower_slack,txy,Input,SHOP_OPEN,13.0.0.a,"Value used for expanding end reservoir volume range below minimum reference volume in cuts (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,schedule,txy,Input,SHOP_OPEN,13.0.0.a,"Reservoir volume schedule (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,schedule_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the reservoir volume schedule should be included in the optimization model: 0 = no schedule; 1 = the endpoint interval upper_slack and lower_slack is valid; 2 = reservoir volume schedule is valid anywhere during the optimization period (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,volume_schedule,txy,Input,SHOP_OPEN,13.0.0.a,"Reservoir volume schedule (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,level_schedule,txy,Input,SHOP_OPEN,13.0.0.a,"Reservoir water level schedule (xUnit: NO_UNIT, yUnit: METER)"
reservoir,volume_ramping_up,txy,Input,SHOP_OPEN,14.0.0.1,"Maximum limit for increase in reservoir volume per hour (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,volume_ramping_down,txy,Input,SHOP_OPEN,14.0.0.1,"Maximum limit for decrease in reservoir volume per hour (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,level_ramping_up,txy,Input,SHOP_OPEN,14.0.0.1,"Maximum limit for increase in reservoir level per hour (xUnit: NO_UNIT, yUnit: METER)"
reservoir,level_ramping_down,txy,Input,SHOP_OPEN,14.0.0.1,"Maximum limit for decrease in reservoir level per hour (xUnit: NO_UNIT, yUnit: METER)"
reservoir,water_value_input,xy_array,Input,SHOP_OPEN,14.0.0.1,"The input water value description of water values referred to the sea. Can be a single constant value, a water value table (xy), or cut coefficients for a single or multiple price nodes. In the case of price dependent cut coefficients, the reference value of each xy in the xy_array should be the relevant price level. (xUnit: MM3, yUnit: NOK/MM3)"
reservoir,energy_value_input,double,Input,SHOP_OPEN,14.0.0.1,"The input local energy value of the reservoir which will be converted to a global water value internally. (xUnit: NOK/MWH, yUnit: NOK/MWH)"
reservoir,peak_volume_cost_curve,xy,Input,SHOP_FLOOD_SUPPORT,14.2.2.0,"A piece-wise constant increasing cost which is applied to the highest reservoir volume reached in the optimization horizon (xUnit: MM3, yUnit: NOK/MM3)"
reservoir,flood_volume_cost_curve,xy,Input,SHOP_FLOOD_SUPPORT,14.2.2.0,"A piece-wise constant increasing cost curve which is used to penalize the reservoir volume level in each hour of the optimzation (xUnit: MM3, yUnit: NOK/MM3)"
reservoir,storage,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting reservoir volume (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,sim_storage,txy,Output,SHOP_OPEN,13.2.0.a,"Simulated reservoir volume (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,head,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting reservoir water level (meter above sea level) (xUnit: NO_UNIT, yUnit: METER)"
reservoir,sim_head,txy,Output,SHOP_OPEN,13.2.0.a,"Simulated reservoir water level (meter above sea level) (xUnit: NO_UNIT, yUnit: METER)"
reservoir,sim_inflow,txy,Output,SHOP_OPEN,13.2.0.a,"Simulated inflow to reservoir (xUnit: NO_UNIT, yUnit: M3/S)"
reservoir,endpoint_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the maximum or minimum volume limit for the reservoir at the end of the optimization period is violated (xUnit: MM3, yUnit: MM3)"
reservoir,penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the maximum or minimum volume limit for the reservoir during the optimization period is violated (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,tactical_penalty_up,txy,Output,SHOP_TACTICAL_LIMIT,13.0.0.a,"Resulting penalty when the tactical maximum volume limit for the reservoir is violated (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,tactical_penalty_down,txy,Output,SHOP_TACTICAL_LIMIT,13.0.0.a,"Resulting penalty when the tactical minimum volume limit for the reservoir is violated (xUnit: NO_UNIT, yUnit: MM3)"
reservoir,end_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty cost when the maximum or minimum volume limit for the reservoir at the end of the optimization period is violated (xUnit: NO_UNIT, yUnit: NOK)"
reservoir,penalty_nok,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty cost when the maximum or minimum volume limit for the reservoir during the optimization period is violated (xUnit: NO_UNIT, yUnit: NOK)"
reservoir,tactical_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty cost when the tactical maximum or minimum volume limit for the reservoir is violated (xUnit: NO_UNIT, yUnit: NOK)"
reservoir,water_value_global_result,txy,Output,SHOP_OPEN,13.0.0.a,"Marginal cost of 1 Mm3 of the water in the reservoir calculated using the sum of the best efficiency point of all cascaded plants below this reservoir (xUnit: NO_UNIT, yUnit: NOK/MM3)"
reservoir,water_value_local_result,txy,Output,SHOP_OPEN,13.0.0.a,"Marginal cost of 1 Mm3 of the water discharged from the reservoir through the downstream plant (xUnit: NO_UNIT, yUnit: NOK/MM3)"
reservoir,energy_value_local_result,txy,Output,SHOP_XML_FORMAT,13.0.0.a,"Marginal cost of 1 MWh power that generated from the water in the reservoir through the downstream plant (xUnit: NO_UNIT, yUnit: NOK/MWH)"
reservoir,end_value,txy,Output,SHOP_OPEN,13.0.0.a,"Value of reservoir contents at the end of the optimization period (xUnit: NO_UNIT, yUnit: NOK)"
reservoir,change_in_end_value,txy,Output,SHOP_OPEN,13.0.0.a,"Relative change in value of reservoir contents between the start and the end of the optimization horizon (xUnit: NO_UNIT, yUnit: NOK)"
reservoir,vow_in_transit,txy,Output,SHOP_OPEN,13.0.0.a,"Value of delayed water on its way to this reservoir after the end of the optimization period (xUnit: NO_UNIT, yUnit: NOK)"
reservoir,calc_global_water_value,double,Output,SHOP_OPEN,14.0.0.1,"The resulting global water value of the reservoir after the local energy value has been converted internally based on the energy_conversion_factor reservoir attribute. (xUnit: NOK/MM3, yUnit: NOK/MM3)"
reservoir,energy_conversion_factor,double,Output,SHOP_OPEN,14.0.0.1,"The calculated conversion factor between MWh and Mm3 based on the first plant below the reservoir and initial start head. (xUnit: MWH/MM3, yUnit: MWH/MM3)"
reservoir,water_value_cut_result,xy_array,Output,SHOP_SCENARIO_FUNCTIONALITY,14.0.0.1,"The resulting output water value cut coefficients when SHOP is used to create cuts. (xUnit: MM3, yUnit: NOK/MM3)"
reservoir,added_to_network,int,Output,SHOP_TUNNEL,13.0.0.a,"Flag determining whether the model has determined that this reservoir is part of a tunnel network (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,network_no,int,Output,SHOP_TUNNEL,13.0.0.a,"Network identification number set by the model to indicate which tunnel network this reservoir is part of (xUnit: NO_UNIT, yUnit: NO_UNIT)"
reservoir,peak_volume_penalty,txy,Output,SHOP_FLOOD_SUPPORT,14.0.1.1,"The peak volume penalty incurred for the reservoir, zero in all time steps except for when the reservoir volume peak occurs (xUnit: NO_UNIT, yUnit: NOK)"
reservoir,flood_volume_penalty,txy,Output,SHOP_FLOOD_SUPPORT,14.2.2.0,"The penalty incurred for the reservoir based on the optimized reservoir volume and the flood_volume_cost_curve (xUnit: NO_UNIT, yUnit: NOK)"
plant,num_gen,int,Output,SHOP_OPEN,13.0.0.a,"Number of generators in the plant (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,num_pump,int,Output,SHOP_OPEN,13.0.0.a,"Number of pumps in the plant (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,less_distribution_eps,double,Input,SHOP_EBL_PLANT,13.0.0.a,"The tolerance level for heuristically distributing discharge on generators (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,latitude,double,Input,SHOP_OPEN,13.0.0.a,"Reserved for future use (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,longitude,double,Input,SHOP_OPEN,13.0.0.a,"Reserved for future use (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,ownership,double,Input,SHOP_OWNERSHIP,13.0.0.a,"Percentage of ownership of plant in case of shared ownership. Used to scale generator efficiency curves accordingly. (xUnit: %, yUnit: %)"
plant,prod_area,txy,Input,SHOP_OPEN,13.0.0.a,"Production from this plant will be sold in markets connected to the given production area (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,prod_area_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether production area connection should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,prod_factor,double,Input,SHOP_OPEN,13.0.0.a,"Optional fixed production factor for the plant in KWh/m3, which is used to convert between NOK/MWh and NOK/Mm3. If this is not specified (value of 0.0), SHOP will calculate a production factor for the plant based on best point operation given the initial plant head. (xUnit: KWH/MM3, yUnit: KWH/MM3)"
plant,outlet_line,double,Input,SHOP_OPEN,13.0.0.a,"The level (meter above sea level) of the outlet tunnel from the plant (xUnit: METER, yUnit: METER)"
plant,intake_line,txy,Input,SHOP_EXTENDED_PUMP_FUNCTIONALITY,13.0.0.a,"Minimum upper level used to calculate the height the pump must lift water to. The upper reservoir water level is used if it is above the value of intake_line (xUnit: NO_UNIT, yUnit: METER)"
plant,main_loss,double_array,Input,SHOP_OPEN,13.0.0.a,"The loss factor for the main tunnel of the plant (xUnit: S2/M5, yUnit: S2/M5)"
plant,penstock_loss,double_array,Input,SHOP_OPEN,13.0.0.a,"The list of loss factors for the penstocks of the plant (xUnit: S2/M5, yUnit: S2/M5)"
plant,tailrace_loss,xy_array,Input,SHOP_OPEN,13.0.0.a,"The head loss curve for the tailrace of the plant which can be modelled as an additional head loss related to the discharge of the plant (and bypass) (xUnit: M3/S, yUnit: METER)"
plant,tailrace_loss_from_bypass_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the bypass discharge should be included in the calculation of tailrace loss (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,intake_loss,xy_array,Input,SHOP_OPEN,13.0.0.a,"The head loss curve for the intake of the plant which can be modelled as an additional head loss related to the discharge of the plant (and bypass) (xUnit: M3/S, yUnit: METER)"
plant,intake_loss_from_bypass_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the bypass discharge should be included in the calculation of intake loss (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,tides,txy,Input,SHOP_TIDES,13.0.0.a,"The change of plant head related to tides (xUnit: NO_UNIT, yUnit: DELTA_METER)"
plant,time_delay,int,Input,SHOP_OPEN,13.0.0.a,"The delay between the water leaving the plant and until it ends up in the downstream reservoir (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,shape_discharge,xy,Input,SHOP_DYNAMIC_DELAY,13.0.0.a,"Describes the shape of the delayed discharge as a wave function of ratios per time step (xUnit: HOUR, yUnit: NO_UNIT)"
plant,discharge_fee,txy,Input,SHOP_VOW_IN_TRANS,13.0.0.a,"Extra cost for plant discharge referring to the time when it was discharged by the plant (xUnit: NO_UNIT, yUnit: NOK/MM3)"
plant,discharge_fee_flag,txy,Input,SHOP_VOW_IN_TRANS,13.0.0.a,"Flag determining whether the discharge fee should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,discharge_cost_curve,xy,Input,SHOP_BLOCK_MERGE,13.0.0.a,"Extra cost depending on the discharge of the plant (xUnit: M3/S, yUnit: NOK/H/M3/S)"
plant,feeding_fee,txy,Input,SHOP_FEEDING_FEE,13.0.0.a,"Extra cost for feeding electricity into the grid. The feeding fee is added as an extra production cost in the objective function. (xUnit: NO_UNIT, yUnit: NOK/MWH)"
plant,feeding_fee_flag,txy,Input,SHOP_FEEDING_FEE,13.0.0.a,"Flag determining whether the feed-in fee should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,production_fee,txy,Input,SHOP_CONSUMPTION_FEE,13.0.0.a,"Fee that is used to reduce the sale price for energy delivered by this plant (xUnit: NO_UNIT, yUnit: NOK/MWH)"
plant,production_fee_flag,txy,Input,SHOP_CONSUMPTION_FEE,13.0.0.a,"Flag determining whether the production fee should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,consumption_fee,txy,Input,SHOP_CONSUMPTION_FEE,13.0.0.a,"Fee that is used to increase the buy price for energy consumed by this plant (xUnit: NO_UNIT, yUnit: NOK/MWH)"
plant,consumption_fee_flag,txy,Input,SHOP_CONSUMPTION_FEE,13.0.0.a,"Flag determining whether the consumption fee should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,linear_startup_flag,txy,Input,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Flag determining whether the plant should have linear startup costs when MIP is not active (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,maintenance_flag,txy,Input,SHOP_OPEN,14.0.0.1,"Flag determining whether the plant is out for maintenance or not (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,mip_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining for which time steps to use binary variables to model generator startup and min production (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,mip_length,txy,Input,SHOP_FLEX_MIP,13.0.0.a,"Set the binary variable length to another value other than the default length of one time step (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,mip_length_flag,txy,Input,SHOP_FLEX_MIP,13.0.0.a,"Flag determining whether the mip_length should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,gen_priority,int_array,Input,SHOP_EBL_PLANT,13.0.0.a,"Prioritization for startup order of generators. If no generators have TXY priority, use this static generator priority (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,n_seg_down,txy,Input,SHOP_EBL_PLANT,13.0.0.a,"The number of segments below the best efficiency point of the unit in the building of original PQ curve in incremental mode (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,n_seg_up,txy,Input,SHOP_EBL_PLANT,13.0.0.a,"The number of segments above the best efficiency point of the unit in the building of original PQ curve in incremental mode (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,n_mip_seg_down,txy,Input,SHOP_EBL_PLANT,13.0.0.a,"The number of segments below the best efficiency point of the unit in the building of original PQ curve in full mode (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,n_mip_seg_up,txy,Input,SHOP_EBL_PLANT,13.0.0.a,"The number of segments below the best efficiency point of the unit in the building of original PQ curve in full mode (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,dyn_pq_seg_flag,txy,Input,SHOP_EBL_PLANT,13.0.0.a,"Flag determining whether dynamically define the segments in the building of the original PQ curve for all the units in this plant in incremental mode (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,dyn_mip_pq_seg_flag,txy,Input,SHOP_EBL_PLANT,14.0.0.1,"Flag determining whether dynamically define the segments in the building of the original PQ curve for all the units in this plant in full mode (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,build_original_pq_curves_by_turb_eff,txy,Input,SHOP_OPEN,14.0.0.1,"Flag determining whether the original PQ curve should be built by the turbine efficiecny curves of the unit or all the operating limits (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,min_p_constr,txy,Input,SHOP_OPEN,13.0.0.a,"Time-dependent minimum production limit for the plant (xUnit: NO_UNIT, yUnit: MW)"
plant,min_p_constr_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the time-dependent minimum production limit for the plant should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,min_p_penalty_flag,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Flag determining whether the time-dependent minimum production limit for the plant should be a hard or soft constraint: 0 = hard; 1 = soft (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,min_p_penalty_cost,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Given penalty cost for violating the time-dependent minimum production limit for the plant (if min_p_penalty_flag is set as 1) (xUnit: NO_UNIT, yUnit: NOK/MWH)"
plant,min_p_penalty_cost_flag,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Flag determining whether the cost for violating the minimum production constraint should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,max_p_constr,txy,Input,SHOP_OPEN,13.0.0.a,"Time-dependent maximum production limit for the plant (xUnit: NO_UNIT, yUnit: MW)"
plant,max_p_constr_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the time-dependent maximum production limit for the plant should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,max_p_penalty_flag,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Flag determining whether the time-dependent maximum production limit for the plant should be a hard or soft constraint: 0 = hard; 1 = soft (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,max_p_penalty_cost,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Given penalty cost for violating the time-dependent maximum production limit for the plant (if max_p_penalty_flag is set as 1) (xUnit: NO_UNIT, yUnit: NOK/MWH)"
plant,max_p_penalty_cost_flag,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Flag determining whether the cost for violating the maximum production constraint should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,min_q_constr,txy,Input,SHOP_OPEN,13.0.0.a,"Time-dependent minimum discharge limit for the plant (xUnit: NO_UNIT, yUnit: M3/S)"
plant,min_q_constr_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the time-dependent minimum discharge limit for the plant should be included in the optimization (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,min_q_penalty_flag,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Flag determining whether the time-dependent minimum discharge limit for the plant should be a hard or soft constraint: 0 = hard; 1 = soft (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,min_q_penalty_cost,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Given penalty cost for violating the time-dependent minimum discharge limit for the plant (if min_q_penalty_flag is set as 1) (xUnit: NO_UNIT, yUnit: NOK/MM3)"
plant,min_q_penalty_cost_flag,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Flag determining whether the cost for violating the minimum discharge constraint should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,max_q_constr,txy,Input,SHOP_OPEN,13.0.0.a,"Time-dependent maximum discharge limit for the plant (xUnit: NO_UNIT, yUnit: M3/S)"
plant,max_q_constr_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the time-dependent maximum discharge limit for the plant should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,max_q_penalty_flag,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Flag determining whether the time-dependent maximum discharge limit for the plant should be a hard or soft constraint: 0 = hard; 1 = soft (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,max_q_penalty_cost,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Given penalty cost for violating the time-dependent maximum discharge limit for the plant by (if max_q_penalty_flag is set as 1) (xUnit: NO_UNIT, yUnit: NOK/MM3)"
plant,max_q_penalty_cost_flag,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Flag determining whether the cost for violating the maximum discharge constraint should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,max_q_limit_rsv_up,xy,Input,SHOP_OPEN,13.0.0.a,"Maximum plant discharge limit (m3/s) and upstream reservoir water level (meter above sea level) relation (xUnit: METER, yUnit: M3/S)"
plant,max_q_limit_rsv_down,xy,Input,SHOP_OPEN,13.0.0.a,"Maximum plant discharge limit (m3/s) and downstream reservoir water level (meter above sea level) relation (xUnit: METER, yUnit: M3/S)"
plant,production_schedule,txy,Input,SHOP_OPEN,13.0.0.a,"Plant production schedule (xUnit: NO_UNIT, yUnit: MW)"
plant,production_schedule_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the plant production schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,discharge_schedule,txy,Input,SHOP_SCHEDULE_M3S,13.0.0.a,"Discharge schedule (xUnit: NO_UNIT, yUnit: M3/S)"
plant,discharge_schedule_flag,txy,Input,SHOP_SCHEDULE_M3S,13.0.0.a,"Flag determining whether the plant discharge schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,consumption_schedule,txy,Input,SHOP_OPEN,13.0.0.a,"Plant consumption schedule (xUnit: NO_UNIT, yUnit: MW)"
plant,consumption_schedule_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the plant consumption schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,upflow_schedule,txy,Input,SHOP_OPEN,13.0.0.a,"Plant upflow schedule (xUnit: NO_UNIT, yUnit: M3/S)"
plant,upflow_schedule_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the plant upflow schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,sched_penalty_cost_down,double,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Given penalty cost for deviating below the plant schedule (xUnit: NOK, yUnit: NOK)"
plant,sched_penalty_cost_up,double,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Given penalty cost for deviating above the plant schedule (xUnit: NOK, yUnit: NOK)"
plant,power_ramping_up,txy,Input,SHOP_OPEN,13.0.0.a,"Maximum limit for increase in plant production per hour (xUnit: NO_UNIT, yUnit: MW_HOUR)"
plant,power_ramping_down,txy,Input,SHOP_OPEN,13.0.0.a,"Maximum limit for decrease in plant production per hour (xUnit: NO_UNIT, yUnit: MW_HOUR)"
plant,discharge_ramping_up,txy,Input,SHOP_OPEN,13.0.0.a,"Maximum limit for increase in plant discharge per hour (xUnit: NO_UNIT, yUnit: M3SEC_HOUR)"
plant,discharge_ramping_down,txy,Input,SHOP_OPEN,13.0.0.a,"Maximum limit for decrease in plant discharge per hour (xUnit: NO_UNIT, yUnit: M3SEC_HOUR)"
plant,block_merge_tolerance,txy,Input,SHOP_OPEN,13.0.0.a,"Maximum deviation in production between two time steps that allows SHOP to force these hours to have the same production in later iterations (xUnit: NO_UNIT, yUnit: MW)"
plant,block_generation_mwh,txy,Input,SHOP_BLOCK_GENERATION,13.0.0.a,"Gives a constant production for the plant in one or more blocks of time steps (xUnit: NO_UNIT, yUnit: HOUR)"
plant,block_generation_m3s,txy,Input,SHOP_BLOCK_GENERATION,13.0.0.a,"Gives a constant discharge for the plant in one or more blocks of time steps (xUnit: NO_UNIT, yUnit: HOUR)"
plant,frr_up_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum FRR_UP delivery for the plant (xUnit: NO_UNIT, yUnit: MW)"
plant,frr_up_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum FRR_UP delivery for the plant (xUnit: NO_UNIT, yUnit: MW)"
plant,frr_down_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum FRR_DOWN delivery for the plant (xUnit: NO_UNIT, yUnit: MW)"
plant,frr_down_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum FRR_DOWN delivery for the plant (xUnit: NO_UNIT, yUnit: MW)"
plant,rr_up_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum RR_UP delivery for the plant (xUnit: NO_UNIT, yUnit: MW)"
plant,frr_symmetric_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether all the generators in the plant should deliver both FRR_UP and FRR_DOWN as long as they are assigned for the FRR reserve (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,bp_dyn_wv_flag,txy,Input,SHOP_BEST_PROFIT,13.0.0.a,"Flag determining whether water values in the best profit calculation should be based on dynamic results per time step from the optimization or the static end value description (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,ref_prod,txy,Output,SHOP_BEST_PROFIT,13.0.0.a,"Production of the plant indicating the planned operating point as starting point for the best profit calculation (xUnit: NO_UNIT, yUnit: MW)"
plant,plant_unbalance_recommit,txy,Input,SHOP_OPEN,14.0.0.1,"Flag determining whether the generators in the plant should be recommitted when the optimization model changes from full mode to incremental mode and the resulting plant discharge is smaller than the optimal discharge from solver (xUnit: NO_UNIT, yUnit: NO_UNIT)"
plant,spinning_reserve_up_max,txy,Input,SHOP_RESERVE_GROUP,14.3.5.0,"Sets a maximum limit for the sum of spinning reserves delivered in the upward direction for the plant. The sum ranges over reserves delivered on all generators and pumps in the plant (xUnit: NO_UNIT, yUnit: MW)"
plant,spinning_reserve_down_max,txy,Input,SHOP_RESERVE_GROUP,14.3.5.0,"Sets a maximum limit for the sum of spinning reserves delivered in the downward direction for the plant. The sum ranges over reserves delivered on all generators and pumps in the plant (xUnit: NO_UNIT, yUnit: MW)"
plant,production,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting plant production, i.e. sum of resulting generator production (xUnit: NO_UNIT, yUnit: MW)"
plant,solver_production,txy,Output,SHOP_OPEN,14.0.0.1,"Preliminary result for the sum of generator production that is returned by the linearized optimization problem (xUnit: NO_UNIT, yUnit: MW)"
plant,sim_production,txy,Output,SHOP_OPEN,13.2.0.a,"Simulated plant production (xUnit: NO_UNIT, yUnit: MW)"
plant,prod_unbalance,txy,Output,SHOP_OPEN,13.0.0.a,"Difference between the result of the non-linear post-calculation (production) and the production determined by the linear optimization problem (solver_production) (xUnit: NO_UNIT, yUnit: MW)"
plant,consumption,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting plant consumption, i.e. sum of resulting pump consumption (xUnit: NO_UNIT, yUnit: MW)"
plant,sim_consumption,txy,Output,SHOP_SIMULATION,13.0.0.a,"Simulated plant consumption, i.e. sum of resulting pump consumption (xUnit: NO_UNIT, yUnit: MW)"
plant,solver_consumption,txy,Output,SHOP_OPEN,14.0.0.1,"Preliminary result for the sum of pump consumption that is returned by the linearized optimization problem (xUnit: NO_UNIT, yUnit: MW)"
plant,cons_unbalance,txy,Output,SHOP_OPEN,13.0.0.a,"Difference between the result of the non-linear post-calculation (consumption) and the consumption determined by the linear optimization problem (solver_consumption) (xUnit: NO_UNIT, yUnit: MW)"
plant,discharge,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting plant discharge, i.e. sum of resulting generator discharge (xUnit: NO_UNIT, yUnit: M3/S)"
plant,solver_discharge,txy,Output,SHOP_OPEN,14.0.0.1,"Preliminary result for the sum of generator discharge that is returned by the linearized optimization problem (xUnit: NO_UNIT, yUnit: M3/S)"
plant,sim_discharge,txy,Output,SHOP_OPEN,13.2.0.a,"Simulated plant discharge (xUnit: NO_UNIT, yUnit: M3/S)"
plant,upflow,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting plant upflow, i.e. sum of resulting pump upflow (xUnit: NO_UNIT, yUnit: M3/S)"
plant,sim_upflow,txy,Output,SHOP_SIMULATION,13.0.0.a,"Simulated plant upflow, i.e. sum of resulting pump upflow (xUnit: NO_UNIT, yUnit: M3/S)"
plant,solver_upflow,txy,Output,SHOP_OPEN,14.0.0.1,"Preliminary result for the sum of pump upflow that is returned by the linearized optimization problem (xUnit: NO_UNIT, yUnit: M3/S)"
plant,gross_head,txy,Output,SHOP_OPEN,14.0.0.1,"Plant gross head, i.e. the difference between upstream reservoir water level and MAX(plant outlet_line, downstream reservoir water level) (xUnit: NO_UNIT, yUnit: METER)"
plant,eff_head,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting plant effective head. If overall generating, effective plant head is defined as the lowest eff_head of the generators. If overall pumping, effective plant head is defined as the highest eff_head of the pumps. (xUnit: NO_UNIT, yUnit: METER)"
plant,head_loss,txy,Output,SHOP_OPEN,13.0.0.a,"Plant head loss, i.e. the plant gross head minus the lowest effective head of the unit in the plant. If overall generating, plant head loss is positive. If overall pumping, plant head loss is negative. (xUnit: NO_UNIT, yUnit: METER)"
plant,min_p_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the time-dependent maximum production limit for the plant is violated (xUnit: NO_UNIT, yUnit: MW)"
plant,max_p_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the time-dependent maximum production limit for the plant is violated (xUnit: NO_UNIT, yUnit: MW)"
plant,min_q_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the time-dependent minimum discharge limit for the plant is violated (xUnit: NO_UNIT, yUnit: MM3)"
plant,max_q_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the time-dependent maximum discharge limit for the plant is violated (xUnit: NO_UNIT, yUnit: MM3)"
plant,p_constr_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty cost when the time-dependent maximum or minimum production limit for the plant is violated (xUnit: NO_UNIT, yUnit: NOK)"
plant,q_constr_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty cost when the time-dependent maximum or minimum discharge limit for the plant is violated (xUnit: NO_UNIT, yUnit: NOK)"
plant,schedule_up_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when deviating above the plant schedule (xUnit: NO_UNIT, yUnit: NOK)"
plant,schedule_down_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when deviating below the plant schedule (xUnit: NO_UNIT, yUnit: NOK)"
plant,schedule_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty cost for violation of the plant schedule (xUnit: NO_UNIT, yUnit: NOK)"
plant,best_profit_q,xyt,Output,SHOP_BEST_PROFIT,13.0.0.a,"Plant discharge after changing the production of the plant from the current operating point to a new point in the best profit curve of the plant (xUnit: MW, yUnit: M3/S)"
plant,best_profit_mc,xyt,Output,SHOP_BEST_PROFIT,13.0.0.a,"Marginal production cost after changing the production of the plant from the current operating point to a new point in the best profit curve of the plant (xUnit: MW, yUnit: NOK/MW)"
plant,best_profit_ac,xyt,Output,SHOP_BEST_PROFIT,13.0.0.a,"Average production cost after changing the production of the plant from the current operating point to a new point in the best profit curve of the plant (xUnit: MW, yUnit: NOK/MW)"
plant,best_profit_commitment_cost,xyt,Output,SHOP_BEST_PROFIT,13.5.4.e,"Sum of startup costs or shutdown costs after changing the production of the plant from the current operating point to a new point in the best profit curve of the plant (xUnit: MW, yUnit: NOK)"
plant,best_profit_bid_matrix,xyt,Output,SHOP_BEST_PROFIT,14.2.2.0,"A plant bid matrix created by reducing the best_profit_mc curves when the command 'print bp_bid_matrix' is called. The maximum number of price columns in the bid matrix is set by the attribute bp_bid_matrix_points on the global_settings object. (xUnit: MW, yUnit: NOK/MW)"
plant,times_of_wrong_pq_uploading,int,Output,SHOP_OPEN,14.0.0.9,"How many times the unit PQ segments are wrongly uploaded, i.e. the latter segments are fulfilled first. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,type,int,Output,SHOP_OPEN,13.0.0.a,"Specification of type of generator when using ASCII-files as input. 0 indicates Francis or Kaplan turbine while PELTON indicates a pelton unit (or a unit where forbidden operating zones is modelled as pelton) (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,num_needle_comb,int,Output,SHOP_OPEN,13.0.0.a,"Number of needle combinations for pelton units (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,prod_area,txy,Input,SHOP_OPEN,13.0.0.a,"Production from this generator will be sold in markets connected to the given production area (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,initial_state,int,Input,SHOP_INITIAL_STATE,13.0.0.a,"The initial operation state of the generator before the optimization period: -1 = not set; 0 = not running; 1 = running (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,penstock,int,Input,SHOP_OPEN,13.0.0.a,"The penstock number the generator is connected to (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,p_min,double,Input,SHOP_OPEN,13.0.0.a,"Static minimum production for the generator (xUnit: MW, yUnit: MW)"
generator,p_max,double,Input,SHOP_OPEN,13.0.0.a,"Static maximum production for the generator (xUnit: MW, yUnit: MW)"
generator,p_nom,double,Input,SHOP_OPEN,13.0.0.a,"The nominal production that is the rated capacity of the generator (xUnit: MW, yUnit: MW)"
generator,gen_eff_curve,xy,Input,SHOP_OPEN,13.0.0.a,"The generator efficiency curve (xUnit: MW, yUnit: %)"
generator,turb_eff_curves,xy_array,Input,SHOP_OPEN,13.0.0.a,"The head-dependent turbine efficiency curve(s) (xUnit: M3/S, yUnit: %)"
generator,maintenance_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the generator is out for maintenance for a given time step (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,startcost,txy,Input,SHOP_TIME_STARTCOST,13.0.0.a,"Generator startup cost (xUnit: NO_UNIT, yUnit: NOK)"
generator,stopcost,txy,Input,SHOP_BLOCK_MERGE,13.0.0.a,"Generator shutdown cost (xUnit: NO_UNIT, yUnit: NOK)"
generator,discharge_cost_curve,xy_array,Input,SHOP_BEP_COST_CURVE,13.0.0.a,"Extra cost depending on the discharge of the generator (xUnit: M3/S, yUnit: NOK/H/M3/S)"
generator,priority,txy,Input,SHOP_OPEN,13.0.0.a,"Time-dependent generators priority to define the uploading order among all the generators in a plant (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,committed_in,txy,Input,SHOP_OPEN,13.0.0.a,"Committed status given by the user used to define the operating status of the generator in the optimization: 0 - committed not to run; 1 - committed to run (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,committed_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the input commit status should be used for a given time step or not (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,min_p_constr,txy,Input,SHOP_TIME_VARIANT_GEN_MIN_PROD,13.0.0.a,"Time-dependent minimum production limit for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,min_p_constr_flag,txy,Input,SHOP_TIME_VARIANT_GEN_MIN_PROD,13.0.0.a,"Flag determining whether the time-dependent minimum production limit for the generator should be included in the building of the original PQ curve (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,max_p_constr,txy,Input,SHOP_TIME_VARIANT_GEN_MAX_PROD,13.0.0.a,"Time-dependent maximum production limit for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,max_p_constr_flag,txy,Input,SHOP_TIME_VARIANT_GEN_MAX_PROD,13.0.0.a,"Flag determining whether the time-dependent maximum production limit for the generator should be included in the building of the original PQ curve (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,min_q_constr,txy,Input,SHOP_TIME_VARIANT_GEN_MIN_PROD,13.0.0.a,"Time-dependent minimum discharge limit for the generator (xUnit: NO_UNIT, yUnit: M3/S)"
generator,min_q_constr_flag,txy,Input,SHOP_TIME_VARIANT_GEN_MIN_PROD,13.0.0.a,"Flag determining whether the time-dependent minimum discharge limit for the generator should be included in the building of the original PQ curve (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,max_q_constr,txy,Input,SHOP_TIME_VARIANT_GEN_MAX_PROD,13.0.0.a,"Time-dependent maximum discharge limit for the generator (xUnit: NO_UNIT, yUnit: M3/S)"
generator,max_q_constr_flag,txy,Input,SHOP_TIME_VARIANT_GEN_MAX_PROD,13.0.0.a,"Flag determining whether the time-dependent maximum discharge limit for the generator should be included in the building of the original PQ curve (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,max_q_limit_rsv_down,xy,Input,SHOP_OPEN,13.0.0.a,"Maximum generator discharge limit (m3/s) and downstream reservoir water level (meter above sea level) relation (xUnit: METER, yUnit: M3/S)"
generator,upstream_min,txy,Input,SHOP_RESIDUAL_RESERVOIR,13.0.0.a,"Minimum water level of upstream reservoir required for running the generator (xUnit: NO_UNIT, yUnit: METER)"
generator,upstream_min_flag,txy,Input,SHOP_RESIDUAL_RESERVOIR,13.0.0.a,"Flag determining whether the minimum water level of upstream reservoir required for running the generator should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,downstream_max,txy,Input,SHOP_OPEN,13.0.0.a,"Maximum water level of downstream reservoir required for running the generator (xUnit: NO_UNIT, yUnit: METER)"
generator,downstream_max_flag,txy,Input,SHOP_RESIDUAL_RESERVOIR,13.0.0.a,"Flag determining whether the maximum water level of downstream required for running the generator should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,production_schedule,txy,Input,SHOP_OPEN,13.0.0.a,"Generator production schedule (xUnit: NO_UNIT, yUnit: MW)"
generator,production_schedule_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the generator production schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,discharge_schedule,txy,Input,SHOP_OPEN,13.0.0.a,"Generator discharge schedule (xUnit: NO_UNIT, yUnit: M3/S)"
generator,discharge_schedule_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the generator discharge schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,fcr_mip_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether binary variables should be used to indicate that the generator can contribute to FCR only if its unused capacity is no less than 2% of the maximum production limit (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,p_fcr_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Temporary minimum production for the generator when delivering FCR (xUnit: NO_UNIT, yUnit: MW)"
generator,p_fcr_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Temporary maximum production for the generator when delivering FCR (xUnit: NO_UNIT, yUnit: MW)"
generator,p_rr_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Temporary minimum production for the generator when delivering RR (xUnit: NO_UNIT, yUnit: MW)"
generator,frr_up_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum FRR_UP delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,frr_up_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum FRR_UP delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,frr_down_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum FRR_DOWN delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,frr_down_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum FRR_DOWN delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_n_up_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum FCR_N_UP delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_n_up_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum FCR_N_UP delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_n_down_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum FCR_N_DOWN delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_n_down_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum FCR_N_DOWN delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_d_up_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum FCR_D_UP delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_d_up_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum FCR_D_UP delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_d_down_min,txy,Input,SHOP_RESERVE_GROUP,14.2.0.0,"Minimum FCR_D_DOWN delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_d_down_max,txy,Input,SHOP_RESERVE_GROUP,14.2.0.0,"Maximum FCR_D_DOWN delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,rr_up_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum RR_UP delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,rr_up_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum RR_UP delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,rr_down_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum RR_DOWN delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,rr_down_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum RR_DOWN delivery for the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_n_up_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Generator FCR_N_UP delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_n_up_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the generator FCR_N_UP delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,fcr_n_down_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Generator FCR_N_DOWN delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_n_down_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the generator FCR_N_DOWN delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,fcr_d_up_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Generator FCR_D_UP delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_d_up_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the generator FCR_D_UP delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,fcr_d_down_schedule,txy,Input,SHOP_RESERVE_GROUP,14.2.0.0,"Generator FCR_D_DOWN delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_d_down_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,14.2.0.0,"Flag determining whether the generator FCR_D_DOWN delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,frr_up_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Generator FRR_UP delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
generator,frr_up_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the generator FRR_UP delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,frr_down_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Generator FRR_DOWN delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
generator,frr_down_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the generator FRR_DOWN delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,rr_up_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Generator RR_UP delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
generator,rr_up_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the generator RR_UP delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,rr_down_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Generator RR_DOWN delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
generator,rr_down_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the generator RR_DOWN delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,droop_cost,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The cost for the unit droop when it is modelled as a variable in the optimization model. This cost should increase when the unit droop decreases (xUnit: NO_UNIT, yUnit: NOK)"
generator,fixed_droop,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Fixed unit droop given as input data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,fixed_droop_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the fixed droop setting should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,droop_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The lower bound of the unit droop when it is modelled as a variable in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,droop_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The upper bound of the unit droop when it is modelled as a variable in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,discrete_droop_values,double_array,Input,SHOP_DISCRETE_DROOP,14.0.1.0,"A list of all legal droop values for the generator. If the functionality for fixing the unit droop is activated by the 'set droop_discretization_limit' command, this list of discrete values will be used when fixing the generator droop (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,reserve_ramping_cost_up,txy,Input,SHOP_RESERVE_CLUSTERING_FUNCTIONALITY,13.0.0.a,"Upward reserve ramping cost for changing reserve delivery of the generator (xUnit: NO_UNIT, yUnit: NOK)"
generator,reserve_ramping_cost_down,txy,Input,SHOP_RESERVE_CLUSTERING_FUNCTIONALITY,13.0.0.a,"Downward reserve ramping cost for changing reserve delivery of the generator (xUnit: NO_UNIT, yUnit: NOK)"
generator,ref_production,txy,Input,SHOP_OPEN,13.0.0.a,"Production of the generator indicating the planned operating point as starting point for the best profit calculation (xUnit: NO_UNIT, yUnit: MW)"
generator,schedule_deviation_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the generator can deviate from the input schedule when calculating marginal cost and best profit curves (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,gen_turn_off_limit,txy,Input,SHOP_OPEN,14.0.0.1,"A decimal number between 0 and 1 that signifies if the generator operates below the fraction (the decimal number) of its minimum operating limit in a full mode without MIP, the unit will be turned off. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,fcr_n_up_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating FCR-N up reserves on this generator (xUnit: NO_UNIT, yUnit: NOK/MW)"
generator,fcr_n_down_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating FCR-N down reserves on this generator (xUnit: NO_UNIT, yUnit: NOK/MW)"
generator,fcr_d_up_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating FCR-D up reserves on this generator (xUnit: NO_UNIT, yUnit: NOK/MW)"
generator,fcr_d_down_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating FCR-D down reserves on this generator (xUnit: NO_UNIT, yUnit: NOK/MW)"
generator,frr_up_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating FRR up reserves on this generator (xUnit: NO_UNIT, yUnit: NOK/MW)"
generator,frr_down_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating FRR down reserves on this generator (xUnit: NO_UNIT, yUnit: NOK/MW)"
generator,rr_up_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating RR up reserves on this generator (xUnit: NO_UNIT, yUnit: NOK/MW)"
generator,rr_down_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating RR down reserves on this generator (xUnit: NO_UNIT, yUnit: NOK/MW)"
generator,spinning_reserve_up_max,txy,Input,SHOP_RESERVE_GROUP,14.3.5.0,"Sets a maximum limit for the sum of spinning reserves delivered in the upward direction on the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,spinning_reserve_down_max,txy,Input,SHOP_RESERVE_GROUP,14.3.5.0,"Sets a maximum limit for the sum of spinning reserves delivered in the downward direction on the generator (xUnit: NO_UNIT, yUnit: MW)"
generator,eff_head,txy,Output,SHOP_OPEN,14.0.0.1,"Resulting effective head of the generator (xUnit: NO_UNIT, yUnit: METER)"
generator,sim_eff_head,txy,Output,SHOP_OPEN,13.5.4.c,"The simulated effective head of the generator (xUnit: NO_UNIT, yUnit: METER)"
generator,head_loss,txy,Output,SHOP_OPEN,14.0.0.1,"Resulting head loss of the generator, i.e. the plant gross head (gross_head) minus the effective head of the generator (eff_head) (xUnit: NO_UNIT, yUnit: METER)"
generator,production,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting generator production, calculated base on discharge (xUnit: NO_UNIT, yUnit: MW)"
generator,solver_production,txy,Output,SHOP_OPEN,13.0.0.a,"Preliminary result for generator production that is returned by the linearized optimization problem (xUnit: NO_UNIT, yUnit: MW)"
generator,sim_production,txy,Output,SHOP_OPEN,13.2.0.a,"Simulated generator production (xUnit: NO_UNIT, yUnit: MW)"
generator,discharge,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting generator discharge. If solver_discharge >= gen_turn_off_limit, discharge is equal to solver_discharge. Otherwise, discharge = 0. (xUnit: NO_UNIT, yUnit: M3/S)"
generator,solver_discharge,txy,Output,SHOP_OPEN,13.0.0.a,"Preliminary result for generator discharge that is returned by the linearized optimization problem (xUnit: NO_UNIT, yUnit: M3/S)"
generator,sim_discharge,txy,Output,SHOP_OPEN,13.2.0.a,"Simulated generator discharge (xUnit: NO_UNIT, yUnit: M3/S)"
generator,committed_out,txy,Output,SHOP_OPEN,13.0.0.a,"Committed status of the generator as a result of the optimization: 0 - not running; 1 - committed to run. Note that if a Pelton is committed to run, the number of needle_comb is returned. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,production_schedule_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the generator production schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
generator,discharge_schedule_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the generator discharge schedule is violated (xUnit: NO_UNIT, yUnit: MM3)"
generator,fcr_n_up_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting generator FCR_N_UP delivery (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_n_down_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting generator FCR_N_DOWN delivery (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_d_up_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting generator FCR_D_UP delivery (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_d_down_delivery,txy,Output,SHOP_RESERVE_GROUP,14.2.0.0,"Resulting generator FCR_D_DOWN delivery (xUnit: NO_UNIT, yUnit: MW)"
generator,frr_up_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting generator FRR_UP delivery (xUnit: NO_UNIT, yUnit: MW)"
generator,frr_down_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting generator FRR_DOWN delivery (xUnit: NO_UNIT, yUnit: MW)"
generator,rr_up_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting generator RR_UP delivery (xUnit: NO_UNIT, yUnit: MW)"
generator,rr_down_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting generator RR_DOWN delivery (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_n_up_delivery_physical,txy,Output,SHOP_RESERVE_GROUP,14.3.3.0,"Resulting physical generator FCR_N delivery in the upward direction (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_n_down_delivery_physical,txy,Output,SHOP_RESERVE_GROUP,14.3.3.0,"Resulting physical generator FCR_N delivery in the downward direction (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_d_up_delivery_physical,txy,Output,SHOP_RESERVE_GROUP,14.3.3.0,"Resulting physical generator FCR_D delivery in the upward direction (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_d_down_delivery_physical,txy,Output,SHOP_RESERVE_GROUP,14.3.3.0,"Resulting physical generator FCR_D delivery in the downward direction (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_n_up_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the generator FCR_N_UP schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_n_down_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the generator FCR_N_DOWN schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_d_up_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the generator FCR_D_UP schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
generator,fcr_d_down_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,14.2.0.0,"Resulting penalty when the generator FCR_D_DOWN schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
generator,frr_up_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the generator FRR_UP schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
generator,frr_down_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the generator FRR_DOWN schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
generator,rr_up_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the generator RR_UP schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
generator,rr_down_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the generator RR_DOWN schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
generator,droop_result,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting unit droop when it is modelled as a variable in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
generator,best_profit_q,xyt,Output,SHOP_BEST_PROFIT,13.0.0.a,"Optimal discharge for the generator given a certain production level of the plant (xUnit: MW, yUnit: NOK/MW)"
generator,best_profit_p,xyt,Output,SHOP_BEST_PROFIT,13.0.0.a,"Optimal production for the generator given a certain production level of the plant (xUnit: MW, yUnit: NOK/MW)"
generator,best_profit_dq_dp,xyt,Output,SHOP_BEST_PROFIT,13.0.0.a,"Ratio between discharge and production for the generator given a certain production level of the plant (xUnit: MW, yUnit: M3/S)"
generator,best_profit_needle_comb,xyt,Output,SHOP_BEST_PROFIT,13.0.0.a,"Optimal needle combination for the generator given a certain production level of the plant (xUnit: MW, yUnit: M3/S)"
generator,startup_cost_mip_objective,txy,Output,SHOP_OPEN,13.0.0.a,"Cost in the objective function of the solver from startup costs originating from the time steps when MIP is used (xUnit: NO_UNIT, yUnit: NOK)"
generator,startup_cost_total_objective,txy,Output,SHOP_OPEN,13.0.0.a,"Post-optimization calculated startup costs based on change in commitment status for both time steps with and without MIP activated (xUnit: NO_UNIT, yUnit: NOK)"
generator,discharge_fee_objective,txy,Output,SHOP_OPEN,13.0.0.a,"Cost in the objective function resulting from discharge fees for this generator (xUnit: NO_UNIT, yUnit: NOK)"
generator,feeding_fee_objective,txy,Output,SHOP_OPEN,13.0.0.a,"Cost in the objective function resulting from feed-in fees for this generator (xUnit: NO_UNIT, yUnit: NOK)"
generator,schedule_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty cost when the generator schedule (production schedule and/or discharge schedule) for the generator is voilated (xUnit: NO_UNIT, yUnit: NOK)"
generator,market_income,txy,Output,SHOP_OPEN,13.0.0.a,"Income in the objective function resulting from production on this generator (xUnit: NO_UNIT, yUnit: NOK)"
generator,original_pq_curves,xyt,Output,SHOP_OPEN,13.5.2.a,"Original PQ-curve for the generator that includes non-convex regions (xUnit: M3/S, yUnit: MW)"
generator,convex_pq_curves,xyt,Output,SHOP_OPEN,13.5.2.a,"Convexified PQ-curve for the generator that includes all the time-dependent operating limits and removes all the nonconcave points of the original PQ curve. The slope of each segment is non-increasing. (xUnit: M3/S, yUnit: MW)"
generator,final_pq_curves,xyt,Output,SHOP_OPEN,13.5.2.a,"Final PQ curve for the generator that is the final form included into the MILP optimization problem. The first point of the convex PQ curve is extended to Q=0. (xUnit: M3/S, yUnit: MW)"
needle_combination,p_max,double,Input,SHOP_PELTON,13.0.0.a,"Static maximum production for the needle combination (xUnit: MW, yUnit: MW)"
needle_combination,p_min,double,Input,SHOP_PELTON,13.0.0.a,"Static minimum production for the needle combination (xUnit: MW, yUnit: MW)"
needle_combination,p_nom,double,Input,SHOP_PELTON,13.0.0.a,"The nominal production that is the rated capacity of the needle combination (xUnit: MW, yUnit: MW)"
needle_combination,turb_eff_curves,xy_array,Input,SHOP_PELTON,13.0.0.a,"The head-dependent turbine efficiency curve(s)for the needle combination (xUnit: M3/S, yUnit: %)"
needle_combination,p_fcr_min,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"Temporary minimum production allowed for the needle combination when delivering FCR (xUnit: NO_UNIT, yUnit: MW)"
needle_combination,p_fcr_max,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"Temporary maximum production allowed for the needle combination when delivering FCR (xUnit: NO_UNIT, yUnit: MW)"
needle_combination,original_pq_curves,xyt,Output,SHOP_OPEN,13.5.2.a,"Original PQ-curve for the needle combination that includes non-convex regions (xUnit: M3/S, yUnit: MW)"
needle_combination,convex_pq_curves,xyt,Output,SHOP_OPEN,13.5.2.a,"Convexified PQ-curve for the needle combination that includes all the time-dependent operating limits and remove all the nonconcave points of the original PQ curve. The slope of each segment is non-increasing. (xUnit: M3/S, yUnit: MW)"
needle_combination,final_pq_curves,xyt,Output,SHOP_OPEN,13.5.2.a,"Final PQ curve for the needle combination that is the final form included into the MILP optimization problem. The first point of the convex PQ curve is extended to Q=0. (xUnit: M3/S, yUnit: MW)"
pump,initial_state,int,Input,SHOP_INITIAL_STATE,13.0.0.a,"The initial operation state of the pump before the optimization period: -1 = not set; 0 = not running; 1 = running (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,penstock,int,Input,SHOP_OPEN,13.0.0.a,"The penstock number the pump is connected to (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,p_min,double,Input,SHOP_OPEN,13.0.0.a,"Static minimum consumption for the pump  (xUnit: MW, yUnit: MW)"
pump,p_max,double,Input,SHOP_OPEN,13.0.0.a,"Static maximum consumption for the pump (xUnit: MW, yUnit: MW)"
pump,p_nom,double,Input,SHOP_OPEN,13.0.0.a,"The nominal consumption that is the rated capacity of the pump (xUnit: MW, yUnit: MW)"
pump,gen_eff_curve,xy,Input,SHOP_OPEN,13.0.0.a,"The efficiency curve for the machine powering the pump (xUnit: MW, yUnit: %)"
pump,turb_eff_curves,xy_array,Input,SHOP_OPEN,13.0.0.a,"The head-dependent turbine efficiency curves in pumping mode (xUnit: M3/S, yUnit: %)"
pump,maintenance_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the pump is out for maintenance for a given time step (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,startcost,txy,Input,SHOP_TIME_STARTCOST,13.0.0.a,"Pump startup cost (xUnit: NO_UNIT, yUnit: NOK)"
pump,stopcost,txy,Input,SHOP_OPEN,13.0.0.a,"Pump shutdown cost (xUnit: NO_UNIT, yUnit: NOK)"
pump,committed_in,txy,Input,SHOP_OPEN,13.0.0.a,"Committed status given by the user used to define the operating status of the pump in the optimization: 0 - committed not to run; 1 - committed to run (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,committed_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether to use the input commit status should be used for a given time step or not (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,upstream_max,txy,Input,SHOP_PUMPING_CONSTRAINT,13.0.0.a,"Maximum water level of upstream reservoir required for operating the pump (xUnit: NO_UNIT, yUnit: METER)"
pump,upstream_max_flag,txy,Input,SHOP_PUMPING_CONSTRAINT,13.0.0.a,"Flag determining whether the maximum water level of upstream reservoir required for operating the pump should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,downstream_min,txy,Input,SHOP_PUMPING_CONSTRAINT,13.0.0.a,"Minimum water level of downstream reservoir required for operating the pump (xUnit: NO_UNIT, yUnit: METER)"
pump,downstream_min_flag,txy,Input,SHOP_PUMPING_CONSTRAINT,13.0.0.a,"Flag determining whether the minimum water level of downstream reservoir required for operating the pump should be included in the optimization model (xUnit: NO_UNIT, yUnit: METER)"
pump,consumption_schedule,txy,Input,SHOP_OPEN,13.0.0.a,"Consumption schedule (xUnit: NO_UNIT, yUnit: MW)"
pump,consumption_schedule_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the pump consumption schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,upflow_schedule,txy,Input,SHOP_OPEN,13.0.0.a,"Pump upflow schedule (xUnit: NO_UNIT, yUnit: M3/S)"
pump,upflow_schedule_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the pump upflow schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,fcr_mip_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether binary variables should be used to enforce minimum available capacity requirement when delivering FCR (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,p_fcr_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Temporary minimum consumption for the pump when delivering FCR (xUnit: NO_UNIT, yUnit: MW)"
pump,p_fcr_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Temporary maximum consumption for the pump when delivering FCR (xUnit: NO_UNIT, yUnit: MW)"
pump,p_rr_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Temporary minimum consumption for the pump when delivering RR (xUnit: NO_UNIT, yUnit: MW)"
pump,frr_up_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum FRR_UP delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,frr_up_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum FRR_UP delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,frr_down_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum FRR_DOWN delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,frr_down_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum FRR_DOWN delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_n_up_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum FCR_N_UP delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_n_up_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum FCR_N_UP delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_n_down_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum FCR_N_DOWN delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_n_down_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum FCR_N_DOWN delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_d_up_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum FCR_D_UP delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_d_up_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum FCR_D_UP delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_d_down_min,txy,Input,SHOP_RESERVE_GROUP,14.2.0.0,"Minimum FCR_D_DOWN delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_d_down_max,txy,Input,SHOP_RESERVE_GROUP,14.2.0.0,"Maximum FCR_D_DOWN delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,rr_up_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum RR_UP delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,rr_up_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum RR_UP delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,rr_down_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Minimum RR_DOWN delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,rr_down_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Maximum RR_DOWN delivery for the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_n_up_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Pump FCR_N_UP delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_n_up_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the pump FCR_N_UP delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,fcr_n_down_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Pump FCR_N_DOWN delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_n_down_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the pump FCR_N_DOWN delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,fcr_d_up_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Pump FCR_D_UP delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_d_up_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the pump FCR_D_UP delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,fcr_d_down_schedule,txy,Input,SHOP_RESERVE_GROUP,14.2.0.0,"Pump FCR_D_DOWN delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_d_down_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,14.2.0.0,"Flag determining whether the pump FCR_D_DOWN delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,frr_up_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Pump FRR_UP delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
pump,frr_up_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the pump FRR_UP delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,frr_down_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Pump FRR_DOWN delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
pump,frr_down_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the pump FRR_DOWN delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,rr_up_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Pump RR_UP delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
pump,rr_up_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the pump RR_UP delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,rr_down_schedule,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Pump RR_DOWN delivery schedule (xUnit: NO_UNIT, yUnit: MW)"
pump,rr_down_schedule_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the pump RR_DOWN delivery schedule should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,droop_cost,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The cost for the unit droop when it is modelled as a variable in the optimization model. This cost should increase when the unit droop decreases (xUnit: NO_UNIT, yUnit: NOK)"
pump,fixed_droop,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Fixed unit droop given as input data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,fixed_droop_flag,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Flag determining whether the fixed droop setting should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,droop_min,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The lower bound of the unit droop when it is modelled as a variable in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,droop_max,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The upper bound of the unit droop when it is modelled as a variable in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,reserve_ramping_cost_up,txy,Input,SHOP_RESERVE_CLUSTERING_FUNCTIONALITY,13.0.0.a,"Upward reserve ramping cost for changing reserve delivery of the pump (xUnit: NO_UNIT, yUnit: NOK/MW)"
pump,reserve_ramping_cost_down,txy,Input,SHOP_RESERVE_CLUSTERING_FUNCTIONALITY,13.0.0.a,"Downward reserve ramping cost for changing reserve delivery of the pump (xUnit: NO_UNIT, yUnit: NOK/MW)"
pump,discrete_droop_values,double_array,Input,SHOP_DISCRETE_DROOP,14.0.1.0,"A list of all legal droop values for the pump. If the functionality for fixing the unit droop is activated by the 'set droop_discretization_limit' command, this list of discrete values will be used when fixing the pump droop (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,fcr_n_up_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating FCR-N up reserves on this pump (xUnit: NO_UNIT, yUnit: NOK/MW)"
pump,fcr_n_down_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating FCR-N down reserves on this pump (xUnit: NO_UNIT, yUnit: NOK/MW)"
pump,fcr_d_up_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating FCR-D up reserves on this pump (xUnit: NO_UNIT, yUnit: NOK/MW)"
pump,fcr_d_down_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating FCR-D down reserves on this pump (xUnit: NO_UNIT, yUnit: NOK/MW)"
pump,frr_up_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating FRR up reserves on this pump (xUnit: NO_UNIT, yUnit: NOK/MW)"
pump,frr_down_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating FRR down reserves on this pump (xUnit: NO_UNIT, yUnit: NOK/MW)"
pump,rr_up_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating RR up reserves on this pump (xUnit: NO_UNIT, yUnit: NOK/MW)"
pump,rr_down_cost,txy,Input,SHOP_RESERVE_GROUP,14.3.4.0,"The cost of allocating RR down reserves on this pump (xUnit: NO_UNIT, yUnit: NOK/MW)"
pump,spinning_reserve_up_max,txy,Input,SHOP_RESERVE_GROUP,14.3.5.0,"Sets a maximum limit for the sum of spinning reserves delivered in the upward direction on the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,spinning_reserve_down_max,txy,Input,SHOP_RESERVE_GROUP,14.3.5.0,"Sets a maximum limit for the sum of spinning reserves delivered in the downward direction on the pump (xUnit: NO_UNIT, yUnit: MW)"
pump,eff_head,txy,Output,SHOP_OPEN,14.0.0.1,"Resulting effective head of the pump (xUnit: NO_UNIT, yUnit: METER)"
pump,head_loss,txy,Output,SHOP_OPEN,14.0.0.1,"Resulting head loss of the generator, i.e. the effective head of the pump (eff_head) minus the plant gross head (gross_head) (xUnit: NO_UNIT, yUnit: METER)"
pump,consumption,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting pump consumption, calculated based on upflow (xUnit: NO_UNIT, yUnit: MW)"
pump,sim_consumption,txy,Output,SHOP_SIMULATION,13.0.0.a,"Simulated pump consumption, calculated based on upflow (xUnit: NO_UNIT, yUnit: MW)"
pump,solver_consumption,txy,Output,SHOP_OPEN,13.0.0.a,"Preliminary result for pump consumption that is returned by the linearized optimization problem (xUnit: NO_UNIT, yUnit: MW)"
pump,upflow,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting pump upflow. If solver_upflow >= pump_turn_off_limit, upflow = solver_upflow. Otherwise, upflow = 0. (xUnit: NO_UNIT, yUnit: M3/S)"
pump,sim_upflow,txy,Output,SHOP_SIMULATION,13.0.0.a,"Simulated pump upflow. (xUnit: NO_UNIT, yUnit: M3/S)"
pump,solver_upflow,txy,Output,SHOP_OPEN,13.0.0.a,"Preliminary result for pump upflow that is returned by the linearized optimization problem (xUnit: NO_UNIT, yUnit: M3/S)"
pump,committed_out,txy,Output,SHOP_OPEN,13.0.0.a,"Committed status of the pump as a result of the optimization: 0 - not running; 1 - committed to run (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,consumption_schedule_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the pump consumption schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
pump,upflow_schedule_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the pump upflow schedule is violated (xUnit: NO_UNIT, yUnit: MM3)"
pump,fcr_n_up_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting pump FCR_N_UP delivery (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_n_down_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting pump FCR_N_DOWN delivery (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_d_up_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting pump FCR_D_UP delivery (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_d_down_delivery,txy,Output,SHOP_RESERVE_GROUP,14.2.0.0,"Resulting pump FCR_D_DOWN delivery (xUnit: NO_UNIT, yUnit: MW)"
pump,frr_up_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting pump FRR_UP delivery (xUnit: NO_UNIT, yUnit: MW)"
pump,frr_down_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting pump FRR_DOWN delivery (xUnit: NO_UNIT, yUnit: MW)"
pump,rr_up_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting pump RR_UP delivery (xUnit: NO_UNIT, yUnit: MW)"
pump,rr_down_delivery,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting pump RR_DOWN delivery (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_n_up_delivery_physical,txy,Output,SHOP_RESERVE_GROUP,14.3.3.0,"Resulting physical pump FCR_N delivery in the upward direction (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_n_down_delivery_physical,txy,Output,SHOP_RESERVE_GROUP,14.3.3.0,"Resulting physical pump FCR_N delivery in the downward direction (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_d_up_delivery_physical,txy,Output,SHOP_RESERVE_GROUP,14.3.3.0,"Resulting physical pump FCR_D delivery in the upward direction (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_d_down_delivery_physical,txy,Output,SHOP_RESERVE_GROUP,14.3.3.0,"Resulting physical pump FCR_D delivery in the downward direction (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_n_up_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the pump FCR_N_UP schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_n_down_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the pump FCR_N_DOWN schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_d_up_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the pump FCR_D_UP schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
pump,fcr_d_down_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,14.2.0.0,"Resulting penalty when the pump FCR_D_DOWN schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
pump,frr_up_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the pump FRR_UP schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
pump,frr_down_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the pump FRR_DOWN schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
pump,rr_up_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the pump RR_UP schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
pump,rr_down_schedule_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the pump RR_DOWN schedule is violated (xUnit: NO_UNIT, yUnit: MW)"
pump,droop_result,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting unit droop when it is modelled as a variable in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
pump,original_pq_curves,xyt,Output,SHOP_OPEN,13.5.2.a,"Original PQ-curve for the pump that includes non-convex regions (xUnit: M3/S, yUnit: MW)"
pump,convex_pq_curves,xyt,Output,SHOP_OPEN,13.5.2.a,"Convexified PQ-curve for the pump that removes all the nonconcave points of the original PQ curve. The slope of each segment is non-decreasing. (xUnit: M3/S, yUnit: MW)"
pump,final_pq_curves,xyt,Output,SHOP_OPEN,13.5.2.a,"Final PQ curve for the pump that is the final form included into the MILP optimization problem. The first point of the convex PQ curve is extended to Q=0. (xUnit: M3/S, yUnit: MW)"
gate,time_delay,int,Input,SHOP_OPEN,13.0.0.a,"The delay between water leaving the gate and until it ends up in the downstream reservoir (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,add_slack,int,Input,SHOP_OPEN,13.0.0.a,"Include slack variables for the corresponding delta meter gate (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,max_discharge,double,Input,SHOP_OPEN,13.0.0.a,"Maximum discharge capacity for the gate (xUnit: M3/S, yUnit: M3/S)"
gate,lin_rel_a,double,Input,SHOP_GATE_FLOW_LIN_REL,13.0.0.a,"Linear approximation to model gate discharge (in Mm3) as a function of upstream reservoir volume: gate_flow = lin_rel_a*up_rsv_volume + lin_rel_b (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,lin_rel_b,double,Input,SHOP_GATE_FLOW_LIN_REL,13.0.0.a,"Linear approximation to model gate discharge (in Mm3) as a function of upstream reservoir volume: gate_flow = lin_rel_a*up_rsv_volume + lin_rel_b (xUnit: MM3, yUnit: MM3)"
gate,shape_discharge,xy,Input,SHOP_DYNAMIC_DELAY,13.0.0.a,"Describes the wave shape of the delayed discharge for a gate by ratios as a function of time delays (xUnit: HOUR, yUnit: NO_UNIT)"
gate,spill_cost_curve,xy,Input,SHOP_FLOOD_SUPPORT,14.2.2.0,"Describes a piece-wise constant cost curve for the flow in the gate. This is only available for spill gates, and overrides the default overflow penalty in SHOP. (xUnit: M3/S, yUnit: NOK/M3/S)"
gate,peak_flow_cost_curve,xy,Input,SHOP_FLOOD_SUPPORT,14.2.2.0,"Describes the piece-wise constant cost curve for the highest achieved flow rate in the gate over the optimization horizon (xUnit: M3/S, yUnit: NOK/M3/S)"
gate,peak_flow_penalty,txy,Output,SHOP_FLOOD_SUPPORT,14.0.1.0,"The penalty incurred based on the peak_flow_cost_curve and the highest achieved flow rate in the gate over the optimization horizon (xUnit: NO_UNIT, yUnit: NOK)"
gate,functions_meter_m3s,xy_array,Input,SHOP_OPEN,13.0.0.a,"The relation between the head and opening of the gate or weir to define the discharge function of the gate (xUnit: METER, yUnit: M3/S)"
gate,functions_deltameter_m3s,xy_array,Input,SHOP_OPEN,13.0.0.a,"Relationship between flow through the gate and water level in upper reservoir and difference in water level between upper and lower reservoir (xUnit: DELTA_METER, yUnit: M3/S)"
gate,min_flow,txy,Input,SHOP_OPEN,13.0.0.a,"Minimum flow constraint on the gate (xUnit: NO_UNIT, yUnit: M3/S)"
gate,min_flow_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the min_flow should be used (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,max_flow,txy,Input,SHOP_OPEN,13.0.0.a,"Maximum flow constraint on the gate (xUnit: NO_UNIT, yUnit: M3/S)"
gate,max_flow_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the max_flow should be used (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,schedule_m3s,txy,Input,SHOP_OPEN,13.0.0.a,"Gate discharge schedule (xUnit: NO_UNIT, yUnit: M3/S)"
gate,schedule_percent,txy,Input,SHOP_OPEN,13.0.0.a,"Gate schedule in percent opening of the gate (xUnit: NO_UNIT, yUnit: %)"
gate,schedule_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining how the gate schedule should be used: 0 = no discharge schedule; 1 = discharge schedule; 2 = flow is calculated from reservoir water level and flow function for the gate (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,setting,txy,Input,SHOP_OPEN,13.0.0.a,"Predefined position of the gate to be used for determining gate flow together with functions and upstream water level (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,setting_flag,txy,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether the gate setting should be used to determine the flow through the gate (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,discharge_fee,txy,Input,SHOP_VOW_IN_TRANS,13.0.0.a,"Cost of discharging water through the gate referred to the time of discharge (xUnit: NO_UNIT, yUnit: NOK/MM3)"
gate,discharge_fee_flag,txy,Input,SHOP_VOW_IN_TRANS,13.0.0.a,"Flag determining whether discharge_fee should be used in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,block_merge_tolerance,txy,Input,SHOP_OPEN,13.0.0.a,"Maximum deviation in discharge between two time steps that forces these hours to have the same discharge in later iterations (xUnit: NO_UNIT, yUnit: M3/S)"
gate,min_q_penalty_flag,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"A flag enabling the penalty cost for the minimum discharge constraint on the gate (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,max_q_penalty_flag,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"A flag enabling the penalty cost for the maximum discharge constraint on the gate (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,ramping_up,txy,Input,SHOP_GATE_RAMPING,13.5.4.a,"Maximum limit for increase in gate discharge per hour (xUnit: NO_UNIT, yUnit: M3SEC_HOUR)"
gate,ramping_up_flag,txy,Input,SHOP_GATE_RAMPING,13.5.4.a,"A flag for toggling the upper ramping limit constraint on and off for this gate (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,ramping_down,txy,Input,SHOP_GATE_RAMPING,13.5.4.a,"Maximum limit for decrease in gate discharge per hour (xUnit: NO_UNIT, yUnit: M3SEC_HOUR)"
gate,ramping_down_flag,txy,Input,SHOP_GATE_RAMPING,13.5.4.a,"A flag for toggling the lower ramping limit constraint on and off for this gate (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,ramp_penalty_cost,txy,Input,SHOP_GATE_RAMPING,13.5.4.a,"The penalty cost for breaking the upper or lower discharge ramping limits for the gate (xUnit: NO_UNIT, yUnit: NOK/M3/S)"
gate,ramp_penalty_cost_flag,txy,Input,SHOP_GATE_RAMPING,13.5.4.a,"A flag for toggling the use of the specified ramping penalty cost for this gate on or off (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,max_q_penalty_cost,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"The penalty cost for the gate maximum discharge constraint (xUnit: NO_UNIT, yUnit: NOK/MM3)"
gate,min_q_penalty_cost,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"The penalty cost for the gate minimum discharge constraint (xUnit: NO_UNIT, yUnit: NOK/MM3)"
gate,max_q_penalty_cost_flag,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Flag determining whether max_q_penalty_cost should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,min_q_penalty_cost_flag,txy,Input,SHOP_SOFT_CONSTRAINTS,13.0.0.a,"Flag determining whether min_q_penalty_cost should be included in the optimization model (xUnit: NO_UNIT, yUnit: NO_UNIT)"
gate,min_q_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the gate minimum discharge is violated (xUnit: NO_UNIT, yUnit: NOK)"
gate,max_q_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the gate maximum discharge is violated (xUnit: NO_UNIT, yUnit: NOK)"
gate,discharge,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting gate discharge (xUnit: NO_UNIT, yUnit: M3/S)"
gate,sim_discharge,txy,Output,SHOP_OPEN,13.2.0.a,"Simulated gate discharge (xUnit: NO_UNIT, yUnit: M3/S)"
thermal,fuel_cost,txy,Input,SHOP_OPEN,14.3.2.0,"Cost proportional to the amount of fuel used by the thermal unit (xUnit: NOK/MWH, yUnit: NOK/MWH)"
thermal,quadratic_fuel_cost,txy,Input,SHOP_OPEN,14.3.2.0,"Cost proportional to the square of the amount of fuel used by the thermal unit (xUnit: NOK/MWH, yUnit: NOK/MWH)"
thermal,n_segments,int,Input,SHOP_OPEN,14.3.2.0,"Number of segments on the production curve of the unit (xUnit: NO_UNIT, yUnit: NO_UNIT)"
thermal,min_prod,txy,Input,SHOP_OPEN,14.3.2.0,"Minimum production level of the unit (xUnit: MW, yUnit: MW)"
thermal,max_prod,txy,Input,SHOP_OPEN,14.3.2.0,"Maximum production level of the unit (xUnit: MW, yUnit: MW)"
thermal,startcost,txy,Input,SHOP_OPEN,14.3.2.0,"Cost for starting up the unit (xUnit: NOK, yUnit: NOK)"
thermal,stopcost,txy,Input,SHOP_OPEN,14.3.2.0,"Cost for shutting down the unit (xUnit: NOK, yUnit: NOK)"
thermal,production,txy,Output,SHOP_OPEN,14.3.2.0,"Production from the unit (xUnit: MW, yUnit: MW)"
junction,junc_slack,int,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether slack variables should be added to the mass balance of the junction (xUnit: NO_UNIT, yUnit: NO_UNIT)"
junction,altitude,double,Input,SHOP_OPEN,13.0.0.a,"Physical height of the connection point between tunnel_1 and tunnel_2 coming into this junction (xUnit: METER, yUnit: METER)"
junction,tunnel_flow_1,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting flow in tunnel_1 (xUnit: NO_UNIT, yUnit: M3/S)"
junction,tunnel_flow_2,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting flow in tunnel_2 (xUnit: NO_UNIT, yUnit: M3/S)"
junction,sim_tunnel_flow_1,txy,Output,SHOP_OPEN,13.5.4.c,"The simulated flow in tunnel_1 of the junction (xUnit: NO_UNIT, yUnit: M3/S)"
junction,sim_tunnel_flow_2,txy,Output,SHOP_OPEN,13.5.4.c,"The simulated flow in tunnel_2 of the junction (xUnit: NO_UNIT, yUnit: M3/S)"
junction,loss_factor_1,double,Input,SHOP_OPEN,13.0.0.a,"Friction loss factor for tunnel_1 into this junction multiplied with the square of the flow to get head loss (xUnit: S2/M5, yUnit: S2/M5)"
junction,loss_factor_2,double,Input,SHOP_OPEN,13.0.0.a,"Friction loss factor for tunnel_2 into this junction multiplied with the square of the flow to get head loss (xUnit: S2/M5, yUnit: S2/M5)"
junction,min_pressure,txy,Input,SHOP_PRESSURE_LINK,13.0.0.a,"Minimum pressure requirement at the connection point of tunnel_1 and tunnel_2 (xUnit: NO_UNIT, yUnit: METER)"
junction,pressure_height,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting pressure height from the optimization calculations (xUnit: NO_UNIT, yUnit: METER)"
junction,sim_pressure_height,txy,Output,SHOP_OPEN,13.5.4.c,"Resulting pressure height from the simulation (xUnit: NO_UNIT, yUnit: METER)"
junction,incr_cost,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting marginal value of water in this junction referred to ocean level accounting for headloss between the tunnel connection point and the plant below (xUnit: NO_UNIT, yUnit: NOK)"
junction,local_incr_cost,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting marginal value of water  in this junction referred to the next reservoir below accounting for headloss between the tunnel connection point and the plant below (xUnit: NO_UNIT, yUnit: NOK)"
junction_gate,add_slack,int,Input,SHOP_OPEN,13.0.0.a,"Flag determining whether slack variables should be added to the mass balance of the junction gate (xUnit: NO_UNIT, yUnit: NO_UNIT)"
junction_gate,height_1,double,Input,SHOP_OPEN,13.0.0.a,"Physical height of the connection point between tunnel_1 and tunnel_2 coming into this junction (xUnit: METER, yUnit: METER)"
junction_gate,loss_factor_1,double,Input,SHOP_OPEN,13.0.0.a,"Friction loss factor for tunnel_1 into this junction multiplied with the square of the flow to get head loss (xUnit: S2/M5, yUnit: S2/M5)"
junction_gate,loss_factor_2,double,Input,SHOP_OPEN,13.0.0.a,"Friction loss factor for tunnel_2 into this junction multiplied with the square of the flow to get head loss (xUnit: S2/M5, yUnit: S2/M5)"
junction_gate,schedule,txy,Input,SHOP_OPEN,13.0.0.a,"Schedule determining the opening status of this junction gate. -2 means that both tunnel_1 and tunnel_2 are open 0 means that the output from the junction_gate is closed 1 means that only tunnel_1 is connected and 2 means that only tunnel_2 is connected. If two junction_gates are connected in series. The lower junction gate can only have schedule values of 0 or 1 or 2 (xUnit: NO_UNIT, yUnit: NO_UNIT)"
junction_gate,pressure_height,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting pressure height from the optimization calculations (xUnit: NO_UNIT, yUnit: METER)"
junction_gate,tunnel_flow_1,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting flow in tunnel_1 (xUnit: NO_UNIT, yUnit: M3/S)"
junction_gate,tunnel_flow_2,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting flow in tunnel_2 (xUnit: NO_UNIT, yUnit: M3/S)"
junction_gate,tunnel_loss_1,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting head loss in tunnel_1 (xUnit: NO_UNIT, yUnit: METER)"
junction_gate,tunnel_loss_2,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting head_loss in tunnel_2 (xUnit: NO_UNIT, yUnit: METER)"
creek_intake,net_head,double,Input,SHOP_CREEK_INTAKE,13.0.0.a,"Physical height of the creek intake opening (xUnit: METER, yUnit: METER)"
creek_intake,max_inflow,double,Input,SHOP_CREEK_INTAKE,13.0.0.a,"Static maximum capacity for inflow to this creek intake (xUnit: M3/S, yUnit: M3/S)"
creek_intake,max_inflow_dynamic,txy,Input,SHOP_CREEK_INTAKE,13.0.0.a,"Time-dependent maxiumu capacity for inflow to this creek intake (xUnit: NO_UNIT, yUnit: M3/S)"
creek_intake,inflow,txy,Input,SHOP_CREEK_INTAKE,13.0.0.a,"Inflow to the creek intake (xUnit: NO_UNIT, yUnit: M3/S)"
creek_intake,sim_inflow,txy,Output,SHOP_CREEK_INTAKE,13.2.0.a,"Resulting inflow to this creek intake after simulation based on observed reservoir level and plant production (xUnit: NO_UNIT, yUnit: M3/S)"
creek_intake,sim_pressure_height,txy,Output,SHOP_CREEK_INTAKE,13.5.4.c,"Resulting pressure height of the creek intake after simulation based on observed reservoir level and plant production (xUnit: NO_UNIT, yUnit: METER)"
creek_intake,inflow_percentage,txy,Input,SHOP_CREEK_INTAKE,13.0.0.a,"Predefined factor to generate inflow to this creek intake based on a percentage of the inflow to the reservoir above (xUnit: NO_UNIT, yUnit: M3/S)"
creek_intake,overflow_cost,txy,Input,SHOP_CREEK_INTAKE,13.0.0.a,"Cost for spillage from this creek intake if a spill gate is connected to it (xUnit: NO_UNIT, yUnit: NOK/MM3)"
creek_intake,non_physical_overflow_flag,txy,Output,SHOP_CREEK_INTAKE,13.0.0.a,"Resulting flag series telling if there was non-physical overflow from this creek intake i.e. spilling water with inflow below the maximum capacity (xUnit: NO_UNIT, yUnit: NO_UNIT)"
market,prod_area,int,Input,SHOP_OPEN,13.0.0.a,"Definition of which production area this market belongs to. All the plants with corresponding prod_area will sell their production to markets in this area. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
market,market_type,string,Input,SHOP_RESERVE_GROUP,13.0.0.a,"String defining the product that is sold in this market. Allowed values are ENERGY, FCR_N_UP, FCR_N_DOWN, FCR_D_UP, FCR_D_DOWN (from version 14.2.0.0), FRR_UP, FRR_DOWN, RR_UP, and RR_DOWN. If this value is not given default market type is ENERGY. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
market,load,txy,Input,SHOP_OPEN,13.0.0.a,"Fixed demand that must be delivered to this market. This comes in addition to any power sold to the market. (xUnit: NO_UNIT, yUnit: MW)"
market,max_buy,txy,Input,SHOP_OPEN,13.0.0.a,"The maximum power that can be bought from the market (xUnit: NO_UNIT, yUnit: MW)"
market,max_sale,txy,Input,SHOP_OPEN,13.0.0.a,"The maximum power that can be sold to the market (xUnit: NO_UNIT, yUnit: MW)"
market,buy_price,txy,Input,SHOP_OPEN,13.0.0.a,"Price for buying power from this market (xUnit: NO_UNIT, yUnit: NOK/MWH)"
market,sale_price,txy,Input,SHOP_OPEN,13.0.0.a,"Price for selling power to this market (xUnit: NO_UNIT, yUnit: NOK/MWH)"
market,buy_delta,txy,Input,SHOP_OPEN,13.0.0.a,"A (small) amount that will be added to the buy price in this market (xUnit: NO_UNIT, yUnit: NOK/MWH)"
market,sale_delta,txy,Input,SHOP_OPEN,13.0.0.a,"A (small) amount that will be subtracted from the sale price in this market (xUnit: NO_UNIT, yUnit: NOK/MWH)"
market,bid_flag,txy,Input,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Flag determining the time steps that should be included in the bid matrix (xUnit: NO_UNIT, yUnit: NO_UNIT)"
market,common_scenario,txy,Input,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Definition of non-anticipativity constraints for each market. The amount traded in the market must be the same for all scenarios and time steps where common_scenario is equal. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
market,buy,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting power bought from this market. (xUnit: NO_UNIT, yUnit: MW)"
market,sale,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting power sold to this market. (xUnit: NO_UNIT, yUnit: MW)"
market,sim_sale,txy,Output,SHOP_OPEN,13.2.0.a,"Simulated power sold to this market. (xUnit: NO_UNIT, yUnit: MW)"
market,reserve_obligation_penalty,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when the reserve obligation is violated (xUnit: NO_UNIT, yUnit: MW)"
market,load_penalty,txy,Output,SHOP_OPEN,13.0.0.a,"Resulting penalty when the load obligation is violated (xUnit: NO_UNIT, yUnit: MW)"
global_settings,load_penalty_flag,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1, default) or off (0) the creation of load penalty variables to add to the load balance constraint. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,rsv_penalty_flag,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1, default) or off (0) the addition of reservoir storage penalty variables. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,volume_ramp_penalty_flag,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1, default) or off (0) the addition of penalty variables for volume ramping on reservoir. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,level_ramp_penalty_flag,int,Input,SHOP_OPEN,14.0.0.6,"Turn on (1, default) or off (0) the addition of penalty variables for level ramping on reservoir. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,production_ramp_penalty_flag,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1, default) or off (0) the addition of penalty variables for power ramping on plant production. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,plant_min_q_penalty_flag,int,Input,SHOP_SOFT_CONSTRAINTS,14.0.0.1,"Turn on (1) or off (0) the addition of penalty variables to the min discharge restrictions on all plants. Default value -1 uses the min_q_penalty_flag specified on each plant to decide if the penalty variables should be added. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,plant_min_p_penalty_flag,int,Input,SHOP_SOFT_CONSTRAINTS,14.0.0.1,"Turn on (1) or off (0) the addition of penalty variables to the min power restrictions on all plants. Default value -1 uses the min_p_penalty_flag specified on each plant to decide if the penalty variables should be added. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,plant_max_q_penalty_flag,int,Input,SHOP_SOFT_CONSTRAINTS,14.0.0.1,"Turn on (1) or off (0) the addition of penalty variables to the max discharge restrictions on all plants. Default value -1 uses the max_q_penalty_flag specified on each plant to decide if the penalty variables should be added. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,plant_max_p_penalty_flag,int,Input,SHOP_SOFT_CONSTRAINTS,14.0.0.1,"Turn on (1) or off (0) the addition of penalty variables to the max power restrictions on all plants. Default value -1 uses the max_p_penalty_flag specified on each plant to decide if the penalty variables should be added. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,gate_min_q_penalty_flag,int,Input,SHOP_SOFT_CONSTRAINTS,14.0.0.1,"Turn on (1) or off (0) the addition of penalty variables to the min discharge restrictions on all gates. Default value -1 uses the min_q_penalty_flag specified on each gate to decide if the penalty variables should be added. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,gate_max_q_penalty_flag,int,Input,SHOP_SOFT_CONSTRAINTS,14.0.0.1,"Turn on (1) or off (0) the addition of penalty variables to the max discharge restrictions on all gates. Default value -1 uses the max_q_penalty_flag specified on each gate to decide if the penalty variables should be added. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,gate_ramp_penalty_flag,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1, default) or off (0) the addition of penalty variables to the gate ramping restrictions. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,plant_schedule_penalty_flag,int,Input,SHOP_SOFT_CONSTRAINTS,14.0.0.1,"Turn on (1, default) or off (0) the addition of penalty variables to allow breaking the plant production or discharge schedule. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,gen_discharge_schedule_penalty_flag,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1, default) or off (0) the addition of penalty variables to allow breaking the generator discharge schedule. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,pump_schedule_penalty_flag,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1, default) or off (0) the addition of penalty variables to allow breaking the pump consumption or upflow schedule. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,power_limit_penalty_flag,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1, default) or off (0) the addition of penalty variables to allow breaking the sum power limits for a group of plants. Can also be set with the command 'penalty flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,power_limit_penalty_cost,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the constraints limiting the sum power output for a group of plants. Default value is 50000 NOK/MWh. Can also be set with the command 'penalty cost'. (xUnit: NOK/MWH, yUnit: NOK/MWH)"
global_settings,load_penalty_cost,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for not fulfilling the load obligation. Default value is 5000 NOK/MWh. Can also be set with the command 'penalty cost'. (xUnit: NOK/MWH, yUnit: NOK/MWH)"
global_settings,rsv_penalty_cost,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the reservoir water balance constraints. Default value is 10,000,000 NOK/Mm3. Can also be set with the command 'penalty cost'. (xUnit: NOK/MM3, yUnit: NOK/MM3)"
global_settings,volume_ramp_penalty_cost,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the reservoir volume ramping constraints. Default value is 100 NOK/MM3. Can also be set with the command 'penalty cost'. (xUnit: NOK/MM3, yUnit: NOK/MM3)"
global_settings,level_ramp_penalty_cost,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the reservoir level ramping constraints. Default value is 100 NOK/METER (xUnit: NOK/METER, yUnit: NOK/METER)"
global_settings,production_ramp_penalty_cost,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the plant power production ramping constraints. Default value is 100 NOK/MWh. Can also be set with the command 'penalty cost'. (xUnit: NOK/MWH, yUnit: NOK/MWH)"
global_settings,plant_soft_p_penalty,double,Input,SHOP_SOFT_CONSTRAINTS,14.0.0.1,"The penalty cost for breaking max and min power production constraints on plant level if max_p_penalty_cost and min_p_penalty_cost are not set for the plant. Default value is 100 NOK/MWh. Can also be set with the command 'penalty cost'. (xUnit: NOK/MWH, yUnit: NOK/MWH)"
global_settings,plant_soft_q_penalty,double,Input,SHOP_SOFT_CONSTRAINTS,14.0.0.1,"The penalty cost for breaking max and min discharge constraints on plant level if max_q_penalty_cost and min_q_penalty_cost are not set for the plant. Default value is 100000 NOK/Mm3. Can also be set with the command 'penalty cost'. (xUnit: NOK/MM3, yUnit: NOK/MM3)"
global_settings,plant_sched_penalty_cost_up,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the plant production or discharge schedules in upward direction. Default value is 1000000 NOK/MWh or 1000000 NOK/Mm3. (xUnit: NOK, yUnit: NOK)"
global_settings,plant_sched_penalty_cost_down,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the plant production or discharge schedules in downward direction. Default value is 1000000 NOK/MWh or 1000000 NOK/Mm3. (xUnit: NOK, yUnit: NOK)"
global_settings,gen_discharge_sched_penalty_cost_up,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the generator discharge schedule in upward direction. Default value is 1000000 NOK/Mm3. (xUnit: NOK/MM3, yUnit: NOK/MM3)"
global_settings,gen_discharge_sched_penalty_cost_down,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the generator discharge schedules in downward direction. Default value is 1000000 NOK/Mm3. (xUnit: NOK/MM3, yUnit: NOK/MM3)"
global_settings,pump_sched_penalty_cost_up,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the pump production or discharge schedules in upward direction. Default value is 1000000 NOK/MWh or 1000000 NOK/Mm3. (xUnit: NOK, yUnit: NOK)"
global_settings,pump_sched_penalty_cost_down,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the pump production or discharge schedules in downward direction. Default value is 1000000 NOK/MWh or 1000000 NOK/Mm3. (xUnit: NOK, yUnit: NOK)"
global_settings,gate_ramp_penalty_cost,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the gate discharge ramping constraints. Default value is 360 NOK/(m3/s). Can also be set with the command 'penalty cost'. (xUnit: NOK/M3/S, yUnit: NOK/M3/S)"
global_settings,discharge_group_penalty_cost,double,Input,SHOP_OPEN,14.0.0.1,"The penalty cost for breaking the discharge group constraints. Default value is 1000000 NOK/Mm3. (xUnit: NOK/MM3, yUnit: NOK/MM3)"
global_settings,reserve_schedule_penalty_cost,double,Input,SHOP_RESERVE_GROUP,14.0.0.1,"The penalty cost for breaking the unit reserve schedule constraints. Default value is 10000 NOK/MW. Can also be set with the command 'set reserve_schedule_penalty_cost'. (xUnit: NOK/MW, yUnit: NOK/MW)"
global_settings,reserve_group_penalty_cost,double,Input,SHOP_RESERVE_GROUP,14.0.0.1,"The penalty cost for delivering less than the reserve obligations of any reserve type in any reserve group. Default value is 10000 NOK/MW. Can also be set with the command 'set reserve_penalty_cost'. (xUnit: NOK/MW, yUnit: NOK/MW)"
global_settings,bypass_cost,double,Input,SHOP_OPEN,14.0.0.1,"The cost of discharging water in bypass gates. Default value is 0.01 NOK/Mm3. (xUnit: NOK/MM3, yUnit: NOK/MM3)"
global_settings,gate_cost,double,Input,SHOP_OPEN,14.0.0.1,"The cost of discharging water in regular gates. Default value is 0 NOK/Mm3. (xUnit: NOK/MM3, yUnit: NOK/MM3)"
global_settings,overflow_cost,double,Input,SHOP_OPEN,14.0.0.1,"The cost of discharging water in spill gates. Default value is 50000 NOK/Mm3. Can also be set with the command 'penalty cost'. (xUnit: NOK/MM3, yUnit: NOK/MM3)"
global_settings,overflow_cost_time_factor,double,Input,SHOP_OPEN,14.0.0.1,"A small negative cost element added to the spillage cost to avoid all flooding to occur at the end of the optimization period. Default value is -0.000001 NOK/Mm3/h. Can also be set with the command 'penalty cost'. (xUnit: NOK/MM3H, yUnit: NOK/MM3H)"
global_settings,gen_reserve_ramping_cost,double,Input,SHOP_RESERVE_CLUSTERING_FUNCTIONALITY,14.0.0.1,"The cost for ramping on the reserves delivered by the generators if unit specific costs are not provided. Default value is 0 NOK/MW. Can also be set with the command 'set reserve_ramping_cost'. (xUnit: NOK/MW, yUnit: NOK/MW)"
global_settings,pump_reserve_ramping_cost,double,Input,SHOP_RESERVE_CLUSTERING_FUNCTIONALITY,14.0.0.1,"The cost for ramping on the reserves delivered by the pumps if unit specific costs are not provided. Default value is 0 NOK/MW. Can also be set with the command 'set reserve_ramping_cost'. (xUnit: NOK/MW, yUnit: NOK/MW)"
global_settings,reserve_contribution_cost,double,Input,SHOP_RESERVE_CLUSTERING_FUNCTIONALITY,14.0.0.1,"The cost for a unit participating in the reserve delivery. Default value is 0 NOK/MW. Can also be set with the command 'set reserve_contribution_cost'. (xUnit: NOK, yUnit: NOK)"
global_settings,gate_ramp_cost,double,Input,SHOP_OPEN,14.0.0.1,"The cost of ramping on gate discharge. Default value is 0 NOK/(m3/s). (xUnit: NOK/M3/S, yUnit: NOK/M3/S)"
global_settings,reserve_group_slack_cost,double,Input,SHOP_RESERVE_GROUP,14.0.0.1,"The cost for delivering more than the reserve obligations of any reserve type in any reserve group. Default value is 0.000001 NOK/MW. Can also be set with the command 'set reserve_slack_cost'. (xUnit: NOK/MW, yUnit: NOK/MW)"
global_settings,use_heuristic_basis,int,Input,SHOP_OPEN,14.0.0.1,"If this parameter is set to 1 a heuristic start basis is given to CPLEX, while a value of 0 (default) does not provide CPLEX with a start basis guess. Can also be set with the command 'set optbasis'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,nodelog,int,Input,SHOP_OPEN,14.0.0.1,"Set the MIP node logging interval (100 is default) used by CPLEX when updating the CPLEX log file. Can also be set with the command 'set mip_nodelog'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,max_num_threads,int,Input,SHOP_OPEN,14.0.0.1,"Set the max number of threads CPLEX can use when solving a MIP problem or using the barrier solver. Default of -1 lets CPLEX use all available threads. Can also be set with the command 'set max_num_threads' (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,parallelmode,int,Input,SHOP_OPEN,14.0.0.1,"Choose the parallel mode CPLEX uses when solving a problem in parallel: 1 (default) gives deterministic result behaviour while -1 lets CPLEX fully utilize the parallel processing. A value of 0 lts CPLEX choose based on the problem. Can also be set with the command 'set parallel_mode'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,timelimit,double,Input,SHOP_OPEN,14.0.0.1,"Maximal number of seconds that can be used to solve a SHOP iteration in CPLEX. Default value is 900 s. Can also be set with the command 'set timelimit'. (xUnit: SECOND, yUnit: SECOND)"
global_settings,mipgap_rel,double,Input,SHOP_OPEN,14.0.0.1,"The maximal relative objective function gap between final integer solution and best bound in CPLEX. Default value is -1 which uses default CPLEX relative MIP gap. Can also be set with the command 'set mipgap'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,mipgap_abs,double,Input,SHOP_OPEN,14.0.0.1,"The maximal objective function gap between final integer solution and best bound in CPLEX. Default value is -1 which uses default CPLEX absolute MIP gap. Can also be set with the command 'set mipgap'. (xUnit: NOK, yUnit: NOK)"
global_settings,inteps,double,Input,SHOP_OPEN,14.0.0.1,"Numerical tolerance for when CPLEX will consider a decimal number to be integer. Default value is 0.00001. Can also be set with the command 'set inteps'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,input_basis_name,string,Input,SHOP_OPEN,14.0.0.1,"Name of the file containing a saved input basis for the optimization problem is saved. If no name is given, no input basis will be loaded. Can also be set with the command 'read optbasis'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,output_basis_name,string,Input,SHOP_OPEN,14.0.0.1,"Name of the file where the optimal basis from the optimization problem in the next iteration is saved. If no name is given, no basis will be saved. Can also be set with the command 'save optbasis'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,solver_algorithm,string,Input,SHOP_OPEN,14.0.0.1,"Name of the solution algorithm CPLEX will use to solve linear problems, can be either 'PRIMAL', 'DUAL' (default), 'BARRIER', 'NETPRIMAL', 'NETDUAL', or 'CONCURRENT'. Can also be set with the command 'set method'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,n_seg_up,int,Input,SHOP_OPEN,14.0.0.1,"Number of segments to be used above best efficient point in incremental mode. Can also be set with the command 'set nseg'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,n_seg_down,int,Input,SHOP_OPEN,14.0.0.1,"Number of segments to be used below best efficient point in incremental mode. Can also be set with the command 'set nseg'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,n_mip_seg_up,int,Input,SHOP_EBL_PLANT,14.0.0.1,"Number of segments to be used above best efficient point in full mode. Can also be set with the command 'set nseg'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,n_mip_seg_down,int,Input,SHOP_EBL_PLANT,14.0.0.1,"Number of segments to be used below best efficient point in full mode. Can also be set with the command 'set nseg'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,dyn_pq_seg_flag,int,Input,SHOP_EBL_PLANT,14.0.0.1,"Flag determining whether dynamically define the segments in the building of the original PQ curve for all the units in incremental mode if no flag series on the plant is provided. Can also be set with the command 'set dyn_seg'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,dyn_mip_pq_seg_flag,int,Input,SHOP_EBL_PLANT,14.0.0.1,"Flag determining whether dynamically define the number of points of the original PQ curve for all the units in full mode if no flag series on the plant or generator is provided. Can also be set with the command 'set dyn_seg'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,bypass_segments,int,Input,SHOP_OPEN,14.0.0.1,"Change the number of variables used to describe the flow in bypass gates. Default number of segments is 1. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,gate_segments,int,Input,SHOP_OPEN,14.0.0.1,"Change the number of variables used to describe the flow in regular gates. Default number of segments is 3. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,overflow_segments,int,Input,SHOP_OPEN,14.0.0.1,"Change the number of variables used to describe the flow in spill gates. Default number of segments is 3. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,gravity,double,Input,SHOP_OPEN,14.0.0.1,"The value of the acceleration due to gravity. Default value is 9.81 m/s2. Can also be set with the command 'set gravity'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,gen_reserve_min_free_cap_factor,double,Input,SHOP_OPEN,14.0.0.1,"The fraction of the maximal generator production that must be left open while the generator is delivering FCR. Default value is 0.02. Can also be set with the command 'set reserve_min_capacity'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,fcr_n_band,double,Input,SHOP_OPEN,14.0.0.1,"The size of the frequency range in either direction where FCR-N is activated. Default value is 0.1 Hz (49.9 to 50.1 Hz). Can also be set with the command 'set fcr_n_band'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,fcr_d_band,double,Input,SHOP_OPEN,14.0.0.1,"The size of the frequency range in upward direction where FCR-D is activated. Default value is 0.4 Hz (49.5 to 49.9 Hz). Can also be set with the command 'set fcr_d_band'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,universal_mip,int,Input,SHOP_OPEN,14.0.0.1,"Toggle the use of binary variables for generator and pump unit commitment on (1) or off (0). Default value of -1 uses mip_flag on each plant to decide if binary variables should be used. Can also be set by the command 'set universal_mip'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,universal_overflow_mip,int,Input,SHOP_OPEN,14.0.0.9,"Toggle the use of binary variables to for reservoir to prevent non-physical spill. Default value of -1 uses overflow_mip_flag on each reservoir to decide if binary variables should be used. Can also be set by the command 'set universal_overflow_mip'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,linear_startup,int,Input,SHOP_OPEN,14.0.0.1,"Toggle the building of liner startup and shutdown costs for generators and pumps on (1) or off (0) when MIP is not active. Default value of -1 uses linear_startup_flag on each plant to decide if startup and shutdown costs should be used. Can also be set by the command 'set linear_startup'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,dyn_flex_mip_steps,int,Input,SHOP_DYN_FLEX,14.0.0.1,"Set the number of time steps used for dynamic flexible MIP. Default value of -1 turns off the dynamic flexible MIP functionality. Can also be set with the command 'set dyn_flex_mip'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,merge_blocks,int,Input,SHOP_BLOCK_MERGE,14.0.0.1,"Turn on (1) or off (0, default) the mering of similar and adjacent time steps for gate discharge and plant production results. A value of 2 will only keep merged blocks from the previous iteration and stop further merging. Can also be set with the command 'set merge'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,power_head_optimization,int,Input,SHOP_POWER_HEAD_OPTIMIZATION,14.0.0.1,"Turn on (1, default) or off (0) power head optimization functionality. Can also be set with the command 'set power_head_optimization'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,droop_discretization_limit,double,Input,SHOP_DISCRETE_DROOP,14.0.1.0,"Set the limit for fixing the droop value of all units that have a resulting droop below the specified limit. The droop is fixed to the closest legal discrete value below the given limit, which is the closest integer below unless the unit has a defined discrete_droop_values attribute. Default value is 0.0. Can also be set with the command 'set discrete_droop_limit'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,droop_cost_exponent,double,Input,SHOP_RESERVE_GROUP,14.2.0.3,"Set this value to any positive number higher than 1.0 to build a convex and increasing cost curve for the droop value instead of using a linear cost. The number represents the degree of the convex polynomial used to build the cost curve, which means that a value of 2.0 results in a quadratic cost curve. Can also be set with the command 'set droop_cost_exponent'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,droop_ref_value,double,Input,SHOP_RESERVE_GROUP,14.2.0.3,"Used to scale the exponential droop cost when the droop_cost_exponent is higher than 1. The exponential cost will be the same as the standard linear cost for the reference value. Can also be set with the command 'set droop_ref_value'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,create_cuts,int,Input,SHOP_SCENARIO_FUNCTIONALITY,14.0.0.1,"Turn on (1) or off (0, default) the createion of cuts for the start time of the SHOP run. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,print_sim_inflow,int,Input,SHOP_SIMULATION,14.0.0.1,"Turn on (1) or off (0, default) the printing of simulated inflow to the simulation result text files. Can also be set with the command 'start shopsim'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,pump_head_optimization,int,Input,SHOP_POWER_HEAD_OPTIMIZATION,14.0.0.1,"Turn on (1) or off (0, default) the inclusion of pump variables in the power head optimization. Can also be set with the command 'set power_head_optimization'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,save_pq_curves,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1) or off (0, default) the saving of the constructed PQ curves for each unit. Can also be set with the command 'save pq_curves'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,build_original_pq_curves_by_turb_eff,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1) or off (0, default) the building of the original PQ curves by only interpolating the first points/last points of the turbine efficiency curves. Can also be set with the command 'set build_original_pq_curves_by_turb_eff'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,plant_unbalance_recommit,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1) or off (0, default) the heuristic that attempts to recommit units in a better way for hours without MIP and the resulting plant discharge is smaller than the optimal discharge from solver. Can also be set with the command 'set plant_unbalance_recommit'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,prefer_start_vol,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1, default) or off (0) the preference of start_vol over start_head for reservoirs where both are specified. Initial water level will be preferred if this attribute is set to zero. Can also be set with the command 'set initial_reservoir'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,bp_print_discharge,int,Input,SHOP_BEST_PROFIT,14.0.0.1,"... Can also be set with the command 'print bp_curves'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,prod_from_ref_prod,int,Input,SHOP_BEST_PROFIT,14.0.0.1,"... Can also be set with the command 'set prod_from_ref_prod'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,bp_min_points,int,Input,SHOP_BEST_PROFIT,14.0.0.1,"... Can also be set with the command 'set min_bp_points'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,bp_mode,int,Input,SHOP_BEST_PROFIT,14.0.0.1,"Turn on (1) or off (0, default)... Can also be set with the command 'print bp_curves'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,stop_cost_from_start_cost,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1) or off (0, default) the usage of the input generator start cost as stop cost. Can also be set with the command 'set stop_cost_from_start_cost'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,ownership_scaling,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1) or off (0, default) the rescaling of the production results for plants and generators that have an ownership less than 100. The scaled results are only found in the text result files. Can also be set with the command 'set ownership_scaling'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,time_delay_unit,string,Input,SHOP_OPEN,14.0.0.1,"Specifies the time unit of the time delay for plants, gates, etc. in the system. Must be either 'MINUTE', 'HOUR' or 'TIME_STEP_LENGTH' (default). Can also be set with the command 'set time_delay_unit'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,bypass_loss,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1) or off (0, default) the addition of the flow in bypass gates when calculating tailrace loss for plants if tailrace_loss_from_bypass_flag is not used. Can also be set with the command 'set bypass_loss'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,gen_turn_off_limit,double,Input,SHOP_OPEN,14.0.0.1,"A decimal number between 0 and 1 that signifies if the generator operates below the fraction (the decimal number) of its minimum operating limit in full mode without MIP, the generator will be turned off. Default value is 0.5. Can also be set with the command 'set gen_turn_off_limit'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,pump_turn_off_limit,double,Input,SHOP_OPEN,14.0.0.1,"A decimal number between 0 and 1 that signifies if the pump operates below the fraction (the decimal number) of its minimum operating limit in full mode without MIP, the pump will be turned off. Default value is 0.5. Can also be set with the command 'set pump_turn_off_limit'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,fcr_n_equality_flag,int,Input,SHOP_RESERVE_GROUP,14.0.0.1,"Turn on (1) or off (0, default) the building of constraints to force the fcr_n delivery for all units to by symmetric. Can also be set with the command 'set fcr_n_equality_flag'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,delay_valuation_mode,int,Input,SHOP_OPEN,14.0.0.1,"The value 0 (default) uses the first value in the water value description to set the value of water in transition at the end of the optimization period. Setting the value to 1 will use the middle point of the water value description instead. Can also be set with the command 'set delay_valuation_mode'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,universal_affinity_flag,int,Input,SHOP_AFFINITY,14.0.0.1,"Turn on (1) or off (0) the use of affinity equations for translating turbine efficiency curves of generators. Default value of -1 uses affinity_eq_flag on each generator to decide if affinity equations should be used. Can also be set by the command 'set universal_affinity'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,ramp_code,int,Input,SHOP_OPEN,14.0.0.1,"Toggle the building of ramping constraints on (1), off (-1), or when violated in previous iteration (0, default).  Can also be set with the command 'set ramping'.  (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,print_original_pq_curves,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1) or off (0, default) the writing of the original PQ curves constructed by SHOP before convexification to file. Can also be set with the command 'print pq_curves'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,print_convex_pq_curves,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1) or off (0, default) the writing of the convexified PQ curves constructed by SHOP to file. Can also be set with the command 'print pq_curves'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,print_final_pq_curves,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1) or off (0, default) the writing of the final PQ curves used in the optimization by SHOP to file. Can also be set with the command 'print pq_curves'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,shop_log_name,string,Input,SHOP_OPEN,14.0.0.1,"Name of the log file written to by SHOP, defult is 'shop.log'. Can also be set with the command 'log file'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,shop_yaml_log_name,string,Input,SHOP_OPEN,14.0.0.1,"Name of the yaml log file written to by SHOP, defult is 'shop_yaml.yaml'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,solver_log_name,string,Input,SHOP_OPEN,14.0.0.1,"Name of the log file written to by the solver, defult is 'cplex.log'. Can also be set with the command 'log file'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,model_file_name,string,Input,SHOP_OPEN,14.0.0.1,"Name of the file where the model seen by the optimization solver will be written to in the next iteration. If no name is given, the model will not be printed to file. Can also be set with the command 'print model'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,pq_curves_name,string,Input,SHOP_OPEN,14.0.0.1,"Name of the file the PQ curves will be written to if activated by setting the print_<>_pq_curves attributes. A default file name based on the iteration will be used if this attribute is not set. Can also be set with the command 'print pq_curves'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,print_loss,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1) or off (0, default) the writing of junction tunnel loss to the result files. Can also be set with the caommand 'save tunnel_loss'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,shop_xmllog,int,Input,SHOP_OPEN,14.0.0.1,"Write the log to xml format if this value is set to 1 instead of the default value 0. Can also be set with the command 'set xmllog' (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,print_optimized_startup_costs,int,Input,SHOP_OPEN,14.0.0.1,"Set value to 1 to only print out the startup and shutdown costs that have been seen by the optimization solver to the log file. Default value of 0 prints out the post calculated startup and shutdown costs. Can also be set with the command 'set startup_cost_printout'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,get_duals_from_mip,int,Input,SHOP_OPEN,14.0.0.1,"Set value to 1 to fix binary variables after solving a MIP iteration and solving the resulting linear problem again to get dual values. Default value of 0 does not re-solve MIP problems to get dual values. Can also be set with the command 'set duals_from_mip'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,bid_aggregation_level,int,Input,SHOP_SCENARIO_FUNCTIONALITY,14.0.0.1,"Set the bid aggregation level of the SHARM bidding functionality to add all plants to the same bid group (0) or to create individual bid groups for each plant (1). If set to -1 (default), the plants are placed in bid groups according to the bid_group attribute on the plant. Can also be set with the command 'set bid_aggregation_level'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,simple_pq_recovery,int,Input,SHOP_OPEN,14.0.0.1,"Turn on (1) or off (0, default) simplified building of PQ curves with a single segment for problematic generators suffering from non-physical uploading of the PQ segments. Can also be turned on with the command 'set simple_pq_recovery'. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,rr_up_schedule_slack_flag,int,Input,SHOP_OPEN,14.2.0.1,"Turn on (1) or off (0, default) slack variable for RR_UP schedule on generators. Penalty cost for slack is set equal to reserve_slack_cost. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,bp_ref_mc_from_market,int,Output,SHOP_BEST_PROFIT,14.2.0.4,"Turn on (1) or off (0, default) functionality taking marginal cost from market description for current operating point on the best profit curve. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,bp_bid_matrix_points,int,Input,SHOP_OPEN,14.2.2.0,"The maximum number of price columns allowed in the best_profit_bid_matrix on the plant object. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,ramp_scale_factor,double,Input,SHOP_OPEN,14.3.0.2,"Used to scale all input ramping values for production and discharge on plants, gates, and reservoirs. Can also be set with the command 'set ramp_scale_factor' (xUnit: NO_UNIT, yUnit: NO_UNIT)"
global_settings,river_flow_penalty_cost,double,Input,SHOP_OPEN,14.3.1.0,"The default penalty cost for breaking the min_flow and max_flow constraints defined on river objects. (xUnit: NOK/M3/S, yUnit: NOK/M3/S)"
reserve_group,fcr_n_up_obligation,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The obligation of FCR_N_UP that should be fulfilled by the reserve group (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,fcr_n_down_obligation,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The obligation of FCR_N_DOWN that should be fulfilled by the reserve group (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,fcr_d_up_obligation,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The obligation of FCR_D_UP that should be fulfilled by the reserve group (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,fcr_d_down_obligation,txy,Input,SHOP_RESERVE_GROUP,14.2.0.0,"The obligation of FCR_D_DOWN that should be fulfilled by the reserve group (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,frr_up_obligation,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The obligation of FRR_UP that should be fulfilled by the reserve group (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,frr_down_obligation,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The obligation of FRR_DOWN that should be fulfilled by the reserve group (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,rr_up_obligation,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The obligation of RR_UP that should be fulfilled by the reserve group (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,rr_down_obligation,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"The obligation of RR_DOWN that should be fulfilled by the reserve group (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,fcr_n_penalty_cost,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Given penalty cost for deviating below the FCR_N_UP or FCR_N_DOWN obligation for the reserve group (xUnit: NO_UNIT, yUnit: NOK/MW)"
reserve_group,fcr_d_penalty_cost,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Given penalty cost for deviating below the FCR_D_UP obligation for the reserve group (xUnit: NO_UNIT, yUnit: NOK/MW)"
reserve_group,frr_penalty_cost,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Given penalty cost for deviating below the FRR_UP or FRR_DOWN obligation for the reserve group (xUnit: NO_UNIT, yUnit: NOK/MW)"
reserve_group,rr_penalty_cost,txy,Input,SHOP_RESERVE_GROUP,13.0.0.a,"Given penalty cost for deviating below the RR_UP or RR_DOWN obligation for the reserve group (xUnit: NO_UNIT, yUnit: NOK/MW)"
reserve_group,fcr_n_up_slack,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting slack when deviating above the FCR_N_UP obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,fcr_n_down_slack,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting slack when deviating above the FCR_N_DOWN obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,fcr_d_up_slack,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting slack when deviating above the FCR_D_UP obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,fcr_d_down_slack,txy,Output,SHOP_RESERVE_GROUP,14.2.0.0,"Resulting slack when deviating above the FCR_D_DOWN obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,frr_up_slack,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting slack when deviating above the FRR_UP obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,frr_down_slack,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting slack when deviating above the FRR_DOWN obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,rr_up_slack,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting slack when deviating above the RR_UP obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,rr_down_slack,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting slack when deviating above the RR_DOWN obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,fcr_n_up_violation,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when deviating below the FCR_N_UP obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,fcr_n_down_violation,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when deviating below the FCR_N_DOWN obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,fcr_d_up_violation,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when deviating below the FCR_D_UP obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,fcr_d_down_violation,txy,Output,SHOP_RESERVE_GROUP,14.2.0.0,"Resulting penalty when deviating below the FCR_D_DOWN obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,frr_up_violation,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when deviating below the FRR_UP obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,frr_down_violation,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when deviating below the FRR_DOWN obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,rr_up_violation,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when deviating below the RR_UP obligation (xUnit: NO_UNIT, yUnit: MW)"
reserve_group,rr_down_violation,txy,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Resulting penalty when deviating belown the RR_DOWN obligation (xUnit: NO_UNIT, yUnit: MW)"
commit_group,deactivate_exclusion_flag,txy,Input,SHOP_OPEN,14.0.0.1,"A flag that can be used to deactivate the commitment exclusion constraints if the flag value is set to 1. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
discharge_group,initial_deviation_mm3,double,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,13.0.0.a,"The initial volume deviation for the discharge group before the optimization period. The positive value refers to the upward deviation from weighted discharge while the negative value refers to the downward deviation from weighted discharge. (xUnit: MM3, yUnit: MM3)"
discharge_group,max_accumulated_deviation_mm3_up,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,13.0.0.a,"Maximum accumulated upward volume deviation (Mm3) for the discharge group (xUnit: NO_UNIT, yUnit: MM3)"
discharge_group,max_accumulated_deviation_mm3_down,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,13.0.0.a,"Maximum accumulated downward volume deviation (Mm3) for the discharge group (xUnit: NO_UNIT, yUnit: MM3)"
discharge_group,weighted_discharge_m3s,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,13.0.0.a,"Weighted discharge target for the discharge group (xUnit: NO_UNIT, yUnit: M3/S)"
discharge_group,penalty_cost_up_per_mm3,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,13.0.0.a,"Given penalty cost for discharging more than the allowed max accumulated deviation for the discharge group (xUnit: NO_UNIT, yUnit: NOK/MM3)"
discharge_group,penalty_cost_down_per_mm3,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,13.0.0.a,"Given penalty cost for discharging less than the allowed max accumulated deviation for the discharge group (xUnit: NO_UNIT, yUnit: NOK/MM3)"
discharge_group,min_discharge_m3s,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,14.0.2.1,"Minimal sum discharge allowed in the discharge group (xUnit: NO_UNIT, yUnit: M3/S)"
discharge_group,max_discharge_m3s,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,14.0.2.1,"Maximal sum discharge allowed in the discharge group (xUnit: NO_UNIT, yUnit: M3/S)"
discharge_group,min_discharge_penalty_cost,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,14.0.2.1,"Penalty cost for violating the minimum discharge constraint of the discharge group. (xUnit: NO_UNIT, yUnit: NOK/H/M3/S)"
discharge_group,max_discharge_penalty_cost,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,14.0.2.1,"Penalty cost for violating the maximum discharge constraint of the discharge group. (xUnit: NO_UNIT, yUnit: NOK/H/M3/S)"
discharge_group,ramping_up_m3s,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,14.0.2.1,"Maximal discharge ramping of the total discharge allowed in the upward direction (xUnit: NO_UNIT, yUnit: M3SEC_HOUR)"
discharge_group,ramping_down_m3s,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,14.0.2.1,"Maximal discharge ramping of the total discharge allowed in the downward direction (xUnit: NO_UNIT, yUnit: M3SEC_HOUR)"
discharge_group,ramping_up_penalty_cost,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,14.0.2.1,"Penalty cost for violating the upward discharge ramping constraint in the discharge group (xUnit: NO_UNIT, yUnit: NOK/H/M3/S)"
discharge_group,ramping_down_penalty_cost,txy,Input,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,14.0.2.1,"Penalty cost for violating the downward discharge ramping constraint in the discharge group (xUnit: NO_UNIT, yUnit: NOK/H/M3/S)"
discharge_group,actual_discharge_m3s,txy,Output,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,13.0.0.a,"Resulting discharge for the discharge group (xUnit: NO_UNIT, yUnit: M3/S)"
discharge_group,accumulated_deviation_mm3,txy,Output,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,13.0.0.a,"Resulting accumulated volume deviation for the discharge group (xUnit: NO_UNIT, yUnit: MM3)"
discharge_group,upper_penalty_mm3,txy,Output,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,13.0.0.a,"Resulting penalty when the maximum accumulated upward volume deviation for the discharge group is violated (xUnit: NO_UNIT, yUnit: MM3)"
discharge_group,lower_penalty_mm3,txy,Output,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,13.0.0.a,"Resulting penalty when the maximum accumulated downward volume deviation for the discharge group is violated (xUnit: NO_UNIT, yUnit: MM3)"
discharge_group,upper_slack_mm3,txy,Output,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,13.0.0.a,"Resulting slack when the maximum accumulated upward volume deviation for the discharge group is not reached (xUnit: NO_UNIT, yUnit: MM3)"
discharge_group,lower_slack_mm3,txy,Output,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,13.0.0.a,"Resulting slack when the maximum accumulated downward volume deviation for the discharge group is not reached (xUnit: NO_UNIT, yUnit: MM3)"
discharge_group,min_discharge_penalty,txy,Output,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,14.0.2.1,"Resulting penalty when the minimum discharge constraint in the discharge group is violated (xUnit: NO_UNIT, yUnit: NOK)"
discharge_group,max_discharge_penalty,txy,Output,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,14.0.2.1,"Resulting penalty when the maximum discharge constraint in the discharge group is violated (xUnit: NO_UNIT, yUnit: NOK)"
discharge_group,ramping_up_penalty,txy,Output,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,14.0.2.1,"Resulting penalty when the upward discharge ramping constraint in the discharge group is violated (xUnit: NO_UNIT, yUnit: NOK)"
discharge_group,ramping_down_penalty,txy,Output,SHOP_DISCHARGE_GROUP_FUNCTIONALITY,14.0.2.1,"Resulting penalty when the downward discharge ramping constraint in the discharge group is violated (xUnit: NO_UNIT, yUnit: NOK)"
production_group,energy_target,double,Input,SHOP_OPEN,14.0.0.1,"Sum energy production target for time steps with energy_target_period_flag set to 1. (xUnit: MWH, yUnit: MWH)"
production_group,energy_penalty_cost_up,double,Input,SHOP_OPEN,14.0.0.1,"Penalty cost for producing more energy than the target amount. (xUnit: NOK/MWH, yUnit: NOK/MWH)"
production_group,energy_penalty_cost_down,double,Input,SHOP_OPEN,14.0.0.1,"Penalty cost for producing less energy than the target amount. (xUnit: NOK/MWH, yUnit: NOK/MWH)"
production_group,energy_target_period_flag,txy,Input,SHOP_OPEN,14.0.0.1,"Flag defining which time steps are part of the target energy production constraint (xUnit: NO_UNIT, yUnit: MWH)"
production_group,max_p_limit,txy,Input,SHOP_SUM_P_TIME_STEP,14.0.0.1,"The maximal power production limit for the sum of plants in the group. (xUnit: NO_UNIT, yUnit: MW)"
production_group,min_p_limit,txy,Input,SHOP_SUM_P_TIME_STEP,14.0.0.1,"The minimal power production limit for the sum of plants in the group. (xUnit: NO_UNIT, yUnit: MW)"
production_group,max_p_penalty_cost,txy,Input,SHOP_SUM_P_TIME_STEP,14.0.0.1,"The penalty cost for breaking the maximum power production limit constraint. The default penalty cost is specified by the power_limit_penalty_cost on the global_settings object. (xUnit: NO_UNIT, yUnit: NOK/MW)"
production_group,min_p_penalty_cost,txy,Input,SHOP_SUM_P_TIME_STEP,14.0.0.1,"The penalty cost for breaking the minimum power production limit constraint. The default penalty cost is specified by the power_limit_penalty_cost on the global_settings object. (xUnit: NO_UNIT, yUnit: NOK/MW)"
production_group,sum_production,txy,Output,SHOP_OPEN,14.0.0.1,"The sum power production of all the plants connected to the group. (xUnit: NO_UNIT, yUnit: MW)"
production_group,min_p_penalty,txy,Output,SHOP_SUM_P_TIME_STEP,14.0.0.1,"The incurred penalty for breaking the minimum power production constraint. (xUnit: NO_UNIT, yUnit: NOK)"
production_group,max_p_penalty,txy,Output,SHOP_SUM_P_TIME_STEP,14.0.0.1,"The incurred penalty for breaking the maximum power production constraint. (xUnit: NO_UNIT, yUnit: NOK)"
production_group,energy_penalty_up,txy,Output,SHOP_OPEN,14.0.0.1,"The total penalty incurred when breaking the target energy constraint by generating more energy than the target. (xUnit: NOK, yUnit: NOK)"
production_group,energy_penalty_down,txy,Output,SHOP_OPEN,14.0.0.1,"The total penalty incurred when breaking the target energy constraint by generating less energy than the target. (xUnit: NOK, yUnit: NOK)"
volume_constraint,min_vol,txy,Input,SHOP_OPEN,13.0.0.a,"Minimum volume for the sum of all reservoirs connected to this constraint (xUnit: NO_UNIT, yUnit: MM3)"
volume_constraint,max_vol,txy,Input,SHOP_OPEN,13.0.0.a,"Maximum volume for the sum of all reservoirs connected to this constraint (xUnit: NO_UNIT, yUnit: MM3)"
volume_constraint,min_vol_penalty,txy,Input,SHOP_OPEN,13.0.0.a,"Given penalty cost for having a sum volume below the min_vol (xUnit: NO_UNIT, yUnit: NOK/MM3)"
volume_constraint,max_vol_penalty,txy,Input,SHOP_OPEN,13.0.0.a,"Given penalty cost for having a sum volume above the max_vol (xUnit: NO_UNIT, yUnit: NOK/MM3)"
scenario,scenario_id,int,Input,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Scenario ID. Should be numbered consecutively starting from 1 (xUnit: NO_UNIT, yUnit: NO_UNIT)"
scenario,probability,txy,Input,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Probability between 0 and 1 for realization of this scenario. The sum of probabilities for all scenarios must be equal to 1. Only the probability for the last time step is used and it will be applied to all time steps to ensure consistency (xUnit: NO_UNIT, yUnit: NO_UNIT)"
scenario,common_scenario,txy,Input,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Definition of non-anticipativity constraints for the full model. All decision variables must be the same for all scenarios and time steps where common_scenario is equal. All input time-series with stochastic data must accordingly have the same value for all scenarios and time steps where common_scenario is equal. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
scenario,common_history,txy,Input,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Definition of which scenario that should be used as the source for a branch in the current scenario. Branching from a different scenario than itself allows modelling of continuous short-term uncertainty by re-using existing scenarios. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
objective,solver_status,string,Output,SHOP_OPEN,13.0.0.a,"Description of the latest status from the solver (xUnit: NO_UNIT, yUnit: NO_UNIT)"
objective,times_of_wrong_pq_uploading,int,Output,SHOP_OPEN,14.0.0.9,"How many times the unit PQ segments are wrongly uploaded, i.e. the latter segments are fulfilled first. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
objective,grand_total,double,Output,SHOP_OPEN,13.0.0.a,"Objective function equal to the sum of total and sum_penalties (xUnit: NOK, yUnit: NOK)"
objective,sim_grand_total,double,Output,SHOP_OPEN,13.2.0.a,"Simulated objective function equal to the sum of total and sum_penalties (xUnit: NOK, yUnit: NOK)"
objective,total,double,Output,SHOP_OPEN,13.0.0.a,"Objective function equal to the sum of rsv_end_value, vow_in_transit, market_sale_buy, load_value, reserve_sale_buy, reserve_oblig_value, contract_value, startup_costs, sum_feeding_fee, and sum_discharge_fee (xUnit: NOK, yUnit: NOK)"
objective,sum_penalties,double,Output,SHOP_OPEN,13.0.0.a,"Penalty cost equal to the sum of minor_penalties and major_penalties (xUnit: NOK, yUnit: NOK)"
objective,minor_penalties,double,Output,SHOP_OPEN,13.0.0.a,"Penalty cost equal to the sum of rsv_tactical_penalty, plant_p_constr_penalty, plant_q_constr_penalty, plant_schedule_penalty, gen_schedule_penalty, pump_schedule_penalty, gate_q_constr_penalty, gate_discharge_cost, bypass_cost, gate_spill_cost, gate_slack_cost, creek_spill_cost, junction_slack_cost, reserve_violation_penalty, reserve_slack_cost, and reserve_schedule_penalty (xUnit: NOK, yUnit: NOK)"
objective,major_penalties,double,Output,SHOP_OPEN,13.0.0.a,"Penalty cost equal to the sum of rsv_penalty, rsv_end_penalty, load_penalty, group_time_period_penalty, group_time_step_penalty, sum_ramping_penalty, discharge_group_penalty, production_group_energy_penalty, and production_group_power_penalty (xUnit: NOK, yUnit: NOK)"
objective,rsv_end_value,double,Output,SHOP_OPEN,13.0.0.a,"Value of water remaining in the reservoirs at the end of the optimization period. If cut description is used, the delayed water on its way to reservoirs is included, while for other end value description this water is valuated in vow_in_transit. (xUnit: NOK, yUnit: NOK)"
objective,sim_rsv_end_value,double,Output,SHOP_OPEN,13.2.0.a,"Simulated value of water remaining in the reservoirs at the end of the simulation period. (xUnit: NOK, yUnit: NOK)"
objective,rsv_end_value_relative,double,Output,SHOP_OPEN,13.0.0.a,"Change in value of water in the reservoirs between the start and the end of the optimization period (xUnit: NOK, yUnit: NOK)"
objective,vow_in_transit,double,Output,SHOP_OPEN,13.0.0.a,"Value of delayed water on its way to reservoirs at the end of the optimization period. If cut description is used the delayed water is valuated as part of the rsv_end_value instead. (xUnit: NOK, yUnit: NOK)"
objective,rsv_spill_vol_end_value,double,Output,SHOP_OPEN,14.0.2.0,"End reservoir value lost due to volume over HRL in flood situations. Only appliccapble when running with constant water values. The extra water is evaluated according to the water value of the reservoir downstream of the spill gate. (xUnit: NOK, yUnit: NOK)"
objective,market_sale_buy,double,Output,SHOP_OPEN,13.0.0.a,"The sum of the value of power bought from the market minus the value of power sold to the market for all time steps (xUnit: NOK, yUnit: NOK)"
objective,sim_market_sale_buy,double,Output,SHOP_OPEN,13.2.0.a,"The sum of the simulated value of power bought from the market minus the value of power sold to the market for all time steps (xUnit: NOK, yUnit: NOK)"
objective,load_value,double,Output,SHOP_OPEN,13.0.0.a,"The load obligation value by multiplying the load with the market sale price (xUnit: NOK, yUnit: NOK)"
objective,reserve_sale_buy,double,Output,SHOP_RESERVE_GROUP,13.0.0.a,"Reserve trade value (xUnit: NOK, yUnit: NOK)"
objective,reserve_oblig_value,double,Output,SHOP_RESERVE_GROUP,13.0.0.a,"THe reserve obligation value by multiplying the reserve obligation with the market sale price (xUnit: NOK, yUnit: NOK)"
objective,contract_value,double,Output,SHOP_CONTRACT,13.0.0.a,"Contract value (xUnit: NOK, yUnit: NOK)"
objective,startup_costs,double,Output,SHOP_OPEN,13.0.0.a,"The sum of the startup and shutdown costs for all units and time steps. By default this includes costs whenever the commitment status of the unit changes regardless of whether MIP is active or not. (xUnit: NOK, yUnit: NOK)"
objective,sim_startup_costs,double,Output,SHOP_OPEN,13.2.0.a,"The sum of simulated startup and shutdown costs for all units and time steps. By default this includes costs whenever the commitment status of the unit changes regardless of whether MIP is active or not. (xUnit: NOK, yUnit: NOK)"
objective,sum_feeding_fee,double,Output,SHOP_OPEN,13.0.0.a,"The sum of feed-in fee paid for all plants and time steps. (xUnit: NOK, yUnit: NOK)"
objective,sum_discharge_fee,double,Output,SHOP_OPEN,13.0.0.a,"The sum of discharge fee paid for all plants and gates and time steps. (xUnit: NOK, yUnit: NOK)"
objective,thermal_cost,double,Output,SHOP_OPEN,14.3.1.0,"The sum of fuel cost for all thermal units and time steps. (xUnit: NOK, yUnit: NOK)"
objective,reserve_allocation_cost,double,Output,SHOP_OPEN,14.3.4.0,"The total cost for allocating reserves on all units in the system. The allocation cost can be specified on each unit for each reserve type, see for instance the 'fcr_n_up_cost' on the generator and pump objects. (xUnit: NOK, yUnit: NOK)"
objective,rsv_tactical_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the tactical maximum or minimum volume limits for the reservoirs are violated (xUnit: NOK, yUnit: NOK)"
objective,plant_p_constr_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the time-dependent maximum or minimum production limits for the plants are violated (xUnit: NOK, yUnit: NOK)"
objective,plant_q_constr_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the time-dependent maximum or minimum discharge limits for the plants are violated (xUnit: NOK, yUnit: NOK)"
objective,plant_schedule_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the plant schedules are violated (xUnit: NOK, yUnit: NOK)"
objective,plant_rsv_q_limit_penalty,double,Output,SHOP_OPEN,14.3.5.1,"Resulting total penalty cost when the head dependent maximum discharge limits for the plants are violated. These limits are set by the max_q_limit_rsv_up and max_q_limit_rsv_down attributes on the plant object (xUnit: NOK, yUnit: NOK)"
objective,gen_schedule_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the generator schedules are violated (xUnit: NOK, yUnit: NOK)"
objective,pump_schedule_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the pump schedules are violated (xUnit: NOK, yUnit: NOK)"
objective,gate_q_constr_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the time-dependent maximum or minimum discharge limits for the gates are violated (xUnit: NOK, yUnit: NOK)"
objective,gate_discharge_cost,double,Output,SHOP_OPEN,13.0.0.a,"The sum of discharge costs for all gates and time steps (xUnit: NOK, yUnit: NOK)"
objective,bypass_cost,double,Output,SHOP_OPEN,13.0.0.a,"The sum of bypass discharge costs for all bypass gates and time steps (xUnit: NOK, yUnit: NOK)"
objective,gate_spill_cost,double,Output,SHOP_OPEN,13.0.0.a,"The sum of spill costs for all spill gates and time steps (xUnit: NOK, yUnit: NOK)"
objective,physical_spill_cost,double,Output,SHOP_OPEN,13.0.0.a,"The sum of spill costs for the part of the spill that represents physical spill, i.e. the spill occurs when the water exceeds max_vol of the reservoir. (xUnit: NOK, yUnit: NOK)"
objective,physical_spill_volume,double,Output,SHOP_OPEN,14.0.0.9,"The sum of spill volume for the part of the spill that represents physical spill, i.e. the spill occurs when the water exceeds max_vol of the reservoir. (xUnit: MM3, yUnit: MM3)"
objective,nonphysical_spill_cost,double,Output,SHOP_OPEN,13.0.0.a,"The sum of spill costs for the part of the spill that represents non-physical spill, i.e. the spill occurs when the water does not reach max_vol of the reservoir. (xUnit: NOK, yUnit: NOK)"
objective,nonphysical_spill_volume,double,Output,SHOP_OPEN,14.0.0.9,"The sum of spill volume for the part of the spill that represents non-physical spill, i.e. the spill occurs when the water does not reach max_vol of the reservoir. (xUnit: MM3, yUnit: MM3)"
objective,gate_slack_cost,double,Output,SHOP_OPEN,13.0.0.a,"The sum of costs for the use of slack variables for all deltameter gates and time steps (xUnit: NOK, yUnit: NOK)"
objective,creek_spill_cost,double,Output,SHOP_OPEN,13.0.0.a,"The sum of spill costs for all creek spill gates and time steps (xUnit: NOK, yUnit: NOK)"
objective,creek_physical_spill_cost,double,Output,SHOP_OPEN,13.0.0.a,"The sum of spill costs for the part of the spill that represents physical spill (xUnit: NOK, yUnit: NOK)"
objective,creek_nonphysical_spill_cost,double,Output,SHOP_OPEN,13.0.0.a,"The sum of spill costs for the part of the spill that represents non-physical spill (xUnit: NOK, yUnit: NOK)"
objective,junction_slack_cost,double,Output,SHOP_OPEN,13.0.0.a,"The sum of cost for the use of slack variables for all junctions and time steps (xUnit: NOK, yUnit: NOK)"
objective,reserve_violation_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the reserve deliveries deviate below the reserve obligations (xUnit: NOK, yUnit: NOK)"
objective,reserve_slack_cost,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total slack cost when the reserve deliveries deviate above the reserve obligations (xUnit: NOK, yUnit: NOK)"
objective,reserve_schedule_penalty,double,Output,SHOP_OPEN,13.5.5.d,"Resulting total penalty cost when the reserve schedules are violated (xUnit: NOK, yUnit: NOK)"
objective,rsv_peak_volume_penalty,double,Output,SHOP_OPEN,14.0.1.1,"Resulting total penalty cost for peak reservoir volumes penalized by the peak_volume_cost_curve on each reservoir (xUnit: NOK, yUnit: NOK)"
objective,gate_peak_flow_penalty,double,Output,SHOP_OPEN,14.0.1.1,"Resulting total penalty cost for peak gate flows penalized by the peak_flow_cost_curve on each gate (xUnit: NOK, yUnit: NOK)"
objective,rsv_flood_volume_penalty,double,Output,SHOP_OPEN,14.2.2.0,"Resulting total penalty cost for the reservoir volumes penalized by the flood_volume_cost_curve (xUnit: NOK, yUnit: NOK)"
objective,rsv_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the maximum or minimum volume limits for all reservoirs during the optimization period are violated (xUnit: NOK, yUnit: NOK)"
objective,rsv_hard_limit_penalty,double,Output,SHOP_OPEN,14.0.2.0,"Resulting total penalty cost for breaking the hard min/max constraints on the reservoir volume or level (xUnit: NOK, yUnit: NOK)"
objective,rsv_over_limit_penalty,double,Output,SHOP_OPEN,14.0.0.8,"Resulting total penalty cost when the volume of reservoirs with an attached flood gate goes over the physical maximum volume limits (xUnit: NOK, yUnit: NOK)"
objective,sim_rsv_penalty,double,Output,SHOP_OPEN,13.2.0.a,"Simulated total penalty cost when the maximum or minimum volume limits for all reservoirs during the optimization period are violated (xUnit: NOK, yUnit: NOK)"
objective,rsv_end_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the maximum or minimum volume limits for all reservoirs at the end of the optimization period are violated (xUnit: NOK, yUnit: NOK)"
objective,load_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when load obligations are violated (xUnit: NOK, yUnit: NOK)"
objective,group_time_period_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when period sum constraints on the old ascii multi-object format are violated. Sum over all constraints (xUnit: NOK, yUnit: NOK)"
objective,group_time_step_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when time-dependent constraints on the old ascii multi-object format are violated. Sum over all constraints and time steps (xUnit: NOK, yUnit: NOK)"
objective,sum_ramping_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when ramping sum constraints on the old ascii format are violated. Sum over all constraints and time steps (xUnit: NOK, yUnit: NOK)"
objective,plant_ramping_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when plnat production ramping constraints are violated. Sum over all plants and time steps (xUnit: NOK, yUnit: NOK)"
objective,rsv_ramping_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when reservoir storage ramping constraints are violated. Sum over all reservoirs and time steps (xUnit: NOK, yUnit: NOK)"
objective,gate_ramping_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when discharge ramping constraints on gates are violated. Sum over all gates and time steps (xUnit: NOK, yUnit: NOK)"
objective,contract_ramping_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when contract ramping constraints are violated. Sum over all contracts and time steps (xUnit: NOK, yUnit: NOK)"
objective,group_ramping_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when time-dependent group ramping constraints on the old ascii format are violated. Sum over all constraints and time steps (xUnit: NOK, yUnit: NOK)"
objective,discharge_group_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the allowed deviations for discharge groups are violated. Sum for both upward and downward violation over all discharge groups and time steps (xUnit: NOK, yUnit: NOK)"
objective,discharge_group_ramping_penalty,double,Output,SHOP_OPEN,14.0.2.1,"Resulting total penalty cost when the discharge ramping constraints for discharge groups are violated. Sum for both upward and downward violation over all discharge groups and time steps (xUnit: NOK, yUnit: NOK)"
objective,production_group_energy_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the energy target production constraints on production groups are violated. Sum for both upward and downward violation over all production groups. (xUnit: NOK, yUnit: NOK)"
objective,production_group_power_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Resulting total penalty cost when the maximum or minimum power limit constraints on production groups are violated. Sum for both upward and downward violation over all production groups and time steps (xUnit: NOK, yUnit: NOK)"
objective,river_min_flow_penalty,double,Output,SHOP_OPEN,14.3.1.0,"Resulting total penalty for breaking the min_flow river constraints (xUnit: NOK, yUnit: NOK)"
objective,river_max_flow_penalty,double,Output,SHOP_OPEN,14.3.1.0,"Resulting total penalty for breaking the max_flow river constraints (xUnit: NOK, yUnit: NOK)"
objective,common_decision_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Penalty cost for violating common decision period constraints in decomposed multi-scenario optimization problems (xUnit: NOK, yUnit: NOK)"
objective,bidding_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Penalty cost for violating constraints for increasing bid volume when price increases in decomposed multi-scenario optimization problems (xUnit: NOK, yUnit: NOK)"
objective,safe_mode_universal_penalty,double,Output,SHOP_OPEN,13.0.0.a,"Penalty cost for all violated constraints when universal penalty is switched on to investigate infeasibility (xUnit: NOK, yUnit: NOK)"
bid_group,price_dimension,int,Output,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Number of prices in the resulting bid matrix (xUnit: NO_UNIT, yUnit: NO_UNIT)"
bid_group,time_dimension,int,Output,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Number of time steps in the resulting bid matrix (xUnit: NO_UNIT, yUnit: NO_UNIT)"
bid_group,bid_start_interval,int,Output,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Index of the first time step in the bid matrix (xUnit: NO_UNIT, yUnit: NO_UNIT)"
bid_group,bid_end_interval,int,Output,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Index of the last time step in the bid matrix (xUnit: NO_UNIT, yUnit: NO_UNIT)"
bid_group,reduction_cost,double,Output,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"The cost of reducing the full bid matrix to the desired number of points (xUnit: NO_UNIT, yUnit: NO_UNIT)"
bid_group,bid_curves,xyt,Output,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Resulting bid matrix (xUnit: NOK/MWH, yUnit: MWH)"
bid_group,bid_penalty,txy,Output,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"The sum of penalty over all scenarios and time steps for violating the requirement of bid volume increasing when price increases in the bid matrix (xUnit: NOK/MWH, yUnit: MWH)"
cut_group,rhs,xy_array,Input,SHOP_OPEN,13.0.0.a,"The right hand side constant for each cut in the cut_group. Represent the future expected income of the system and is usually a positive number. In the case of price dependent cuts, the price level should be the reference value for each xy in the xy_array. (xUnit: NO_UNIT, yUnit: NOK)"
cut_group,end_value,txy,Output,SHOP_OPEN,14.0.0.1,"Future expected income of the system that is part of the cut_group. (xUnit: NO_UNIT, yUnit: NOK)"
cut_group,binding_cut_up,txy,Output,SHOP_OPEN,14.0.0.1,"The zero-indexed binding cut constraint in the closest price level above the average price in SHOP is saved as the final value in the time series. The value is set to -1 if no cuts have a price above the average price in SHOP. In case of price independent cuts, the value is the binding cut in the cut group. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
cut_group,binding_cut_down,txy,Output,SHOP_OPEN,14.0.0.1,"The zero-indexed binding cut constraint in the closest price level below the average price in SHOP is saved as the final value in the time series. In case of price independent cuts or if there are no cuts with a price below the average price in SHOP, the value is set to -1. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
inflow_series,cut_coeffs,xy_array,Input,SHOP_EXTENDED_CUT_FUNCTIONALITY,14.0.0.3,"The cut coefficients of the inflow series used in prodrisk. The x values specify the reference weekly inflow of the cut, the y values are the actual cut coefficients, and the reference value is the price for when the cut was created. (xUnit: MM3, yUnit: NOK/MM3)"
system,cut_output_rhs,xy_array,Output,SHOP_SCENARIO_FUNCTIONALITY,13.0.0.a,"Expected future income for the cuts generated by the model. The future incomes represent cuts in the same order as cut_ouput_coeffs_mm3 on reservoirs (xUnit: NOK, yUnit: NOK)"
unit_combination,discharge,xyt,Output,SHOP_BEST_PROFIT,13.0.0.a,"Discharge for a combination of generators corresponding to a certain production level of the unit combination. The result is generated by the best_profit module. (xUnit: MW, yUnit: M3/S)"
unit_combination,marginal_cost,xyt,Output,SHOP_BEST_PROFIT,13.0.0.a,"Marginal production cost for a combination of generators corresponding to a certain production level of the unit combination. The result is generated by the best_profit module. (xUnit: MW, yUnit: NOK/MW)"
unit_combination,average_cost,xyt,Output,SHOP_BEST_PROFIT,13.0.0.a,"Average production cost for a combination of generators corresponding to a certain production level of the unit combination. The result is generated by the best_profit module. (xUnit: M3/S, yUnit: NOK/MW)"
tunnel,start_height,double,Input,SHOP_OPEN,13.5.1.a,"The lowest part of the opening of the tunnel at the point defined as the starting point of the tunnel (xUnit: METER, yUnit: METER)"
tunnel,end_height,double,Input,SHOP_OPEN,13.5.1.a,"The lowest part of the opening of the tunnel at the point defined as the ending point of the tunnel (xUnit: METER, yUnit: METER)"
tunnel,diameter,double,Input,SHOP_OPEN,13.5.1.a,"The diameter of the tunnel. This is reserved for use in the simulation (xUnit: METER, yUnit: METER)"
tunnel,length,double,Input,SHOP_OPEN,13.5.1.a,"The length of the tunnel. This is reserved for use in the simulation (xUnit: METER, yUnit: METER)"
tunnel,loss_factor,double,Input,SHOP_OPEN,13.5.1.a,"Friction loss factor for the tunnel. The head loss in the tunnel is found by multiplying the loss_factor with the square of the flow. The loss_factor is also divided with the gate_opening_curve y-value if the gate is not fully open. (xUnit: S2/M5, yUnit: S2/M5)"
tunnel,weir_width,double,Input,SHOP_OPEN,14.1.0.5,"Width of weir at tunnel entrance. Tunnel flow is limited by the amount of water that may flow over the weir, depending on the head of the reservoir above. (xUnit: METER, yUnit: METER)"
tunnel,time_delay,int,Input,SHOP_OPEN,13.5.1.a,"The delay between the water leaving the tunnel and until it ends up in the downstream reservoir. This can only be used on tunnels with end_height above the HRL of the downstream reservoir (xUnit: NO_UNIT, yUnit: NO_UNIT)"
tunnel,gate_opening_curve,xy,Input,SHOP_TUNNEL,13.5.1.a,"Relationship between gate positions and related scaling of the pressure loss in the gate. The X-values represent an arbitrary position given by increasing numbers. The Y-values represent the corresponding opening factor for each position. The tunnel loss_factor is divided with the y-value if the gate is not fully open. An y-value of 0 represents a fully closed gate and will not be used for any division (xUnit: NO_UNIT, yUnit: NO_UNIT)"
tunnel,gate_adjustment_cost,txy,Input,SHOP_TUNNEL,13.5.1.a,"A cost for changing the gate position between each time step. The given cost is multiplied with the change in gate opening between each time step and the product is added to the objective function (xUnit: NOK, yUnit: NOK)"
tunnel,gate_opening_schedule,txy,Input,SHOP_TUNNEL,13.5.1.a,"Schedule for gate opening corresponding to the x-values of the gate_opening_curve (xUnit: NO_UNIT, yUnit: NO_UNIT)"
tunnel,initial_opening,double,Input,SHOP_TUNNEL,13.5.1.a,"Initial position of the gate used as basis for calculating adjustment costs in the first time step (xUnit: NO_UNIT, yUnit: NO_UNIT)"
tunnel,continuous_gate,int,Input,SHOP_TUNNEL,13.5.1.a,"Flag determining whether the gate can be set to any position between listed positions in the gate_opening_curve. A value of 0 means that it can only be set at the given positions while a value of 1 means that it can be set to any position between the first and last listed position (xUnit: NO_UNIT, yUnit: NO_UNIT)"
tunnel,end_pressure,txy,Output,SHOP_OPEN,13.5.1.a,"Resulting pressure from the optimization at the end of the tunnel (xUnit: METER, yUnit: METER)"
tunnel,sim_end_pressure,txy,Output,SHOP_OPEN,13.5.1.a,"Resulting pressure from the simulated at the end of the tunnel (xUnit: METER, yUnit: METER)"
tunnel,flow,txy,Output,SHOP_OPEN,13.5.1.a,"Resulting flow in the tunnel (xUnit: M3/S, yUnit: M3/S)"
tunnel,sim_flow,txy,Output,SHOP_OPEN,13.5.1.a,"Simulated flow in the tunnel (xUnit: M3/S, yUnit: M3/S)"
tunnel,gate_opening,txy,Output,SHOP_TUNNEL,13.5.1.a,"Resulting position of the tunnel gate after optimization (xUnit: NO_UNIT, yUnit: NO_UNIT)"
tunnel,network_no,int,Output,SHOP_OPEN,13.5.1.a,"Network identification number set by the model to indicate which tunnel network this tunnel is part of (xUnit: NO_UNIT, yUnit: NO_UNIT)"
tunnel,min_flow,txy,Input,SHOP_OPEN,13.5.1.a,"Minimum allowed flow in this tunnel (xUnit: M3/S, yUnit: M3/S)"
tunnel,max_flow,txy,Input,SHOP_OPEN,13.5.1.a,"Maximum allowed flow in this tunnel (xUnit: M3/S, yUnit: M3/S)"
tunnel,min_flow_penalty_cost,txy,Input,SHOP_OPEN,13.5.4.a,"Given penalty cost for violating minimum flow in this tunnel (xUnit: NOK, yUnit: NOK)"
tunnel,max_flow_penalty_cost,txy,Input,SHOP_OPEN,13.5.4.a,"Given penalty cost for violating maximum flow in this tunnel (xUnit: NOK, yUnit: NOK)"
tunnel,min_start_pressure,txy,Input,SHOP_TUNNEL,14.2.3.0,"Minimum allowed pressure at the start of this tunnel (xUnit: METER, yUnit: METER)"
interlock_constraint,min_open,txy,Input,SHOP_TUNNEL,13.5.1.a,"Minimum limit for how many objects connected to this constraint that can be open simultaneously. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
interlock_constraint,max_open,txy,Input,SHOP_TUNNEL,13.5.1.a,"Maximum limit for how many objects connected to this constraint that can be open simultaneously. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
interlock_constraint,forward_switch_time,double,Input,SHOP_TUNNEL,13.5.4.d,"Minimum number of hours that plant below must be stopped after closing tunnels connected to this constraint. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
interlock_constraint,backward_switch_time,double,Input,SHOP_TUNNEL,13.5.4.d,"Minimum number of hours that plant below must be stopped after closing tunnels connected from this constraint. (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,sim_mode,int,Input,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,var_type_names,string_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,var_type_abbrev,string_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,var_type_index_type_beg,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,var_type_index_type_cnt,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,var_type_index_type_val,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,row_type_names,string_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,row_type_index_type_beg,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,row_type_index_type_cnt,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,row_type_index_type_val,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,index_type_names,string_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,index_type_desc_beg,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,index_type_desc_cnt,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,index_type_desc_val,string_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,AA,double_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,Irow,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,Jcol,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,rhs,double_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,sense,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,ub,double_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,lb,double_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,cc,double_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,bin,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,x,double_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,dual,double_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,var_type,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,var_index_beg,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,var_index_cnt,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,var_index_val,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,row_type,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,row_index_beg,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,row_index_cnt,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,row_index_val,int_array,Output,SHOP_OPEN,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_row_type,int,Input,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_row_index,int_array,Input,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_row_variables,int_array,Input,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_row_coeff,double_array,Input,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_row_rhs,double,Input,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_row_sense,int,Input,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_row_last,int,Output,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_var_type,int,Input,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_var_index,int_array,Input,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_var_ub,double,Input,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_var_lb,double,Input,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_var_cc,double,Input,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_var_bin,int,Input,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
lp_model,add_var_last,int,Output,SHOP_LP_MODEL,14.1.0.0,"LP-model data (xUnit: NO_UNIT, yUnit: NO_UNIT)"
river,length,double,Input,SHOP_RIVER,14.3.1.0,"Length of the river segment (xUnit: METER, yUnit: METER)"
river,upstream_elevation,double,Input,SHOP_RIVER,14.3.1.0,"The elevation of the river floor upstream (xUnit: METER, yUnit: METER)"
river,downstream_elevation,double,Input,SHOP_RIVER,14.3.1.0,"The elevation of the river floor downstream (xUnit: METER, yUnit: METER)"
river,time_delay_const,double,Input,SHOP_RIVER,14.3.1.0,"The time delay of the water flowing down the river (xUnit: HOUR, yUnit: HOUR)"
river,delayed_water_energy_value,double,Input,SHOP_RIVER,14.3.1.0,"Specifies a constant energy value used to evaluate the water in transit at the end of the optimization horizon. The water value of the downstream reservoir will be used if this attribute is not specified. (xUnit: NOK/MWH, yUnit: NOK/MWH)"
river,width_head_curve,xy,Input,SHOP_RIVER,14.3.1.0,"The curve describing the shape of the river cross section (xUnit: METER, yUnit: METER)"
river,inflow,txy,Input,SHOP_RIVER,14.3.1.0,"The upstream natural inflow to the river (xUnit: M3/S, yUnit: M3/S)"
river,min_flow,txy,Input,SHOP_RIVER,14.3.1.0,"Defines a minimum flow constraint for the river (xUnit: M3/S, yUnit: M3/S)"
river,max_flow,txy,Input,SHOP_RIVER,14.3.1.0,"Defines a maximum flow constraint for the river (xUnit: M3/S, yUnit: M3/S)"
river,min_flow_penalty_cost,txy,Input,SHOP_RIVER,14.3.1.0,"The penalty cost for breaking the min_flow constraint. Overrides the default river_flow_penalty_cost defined on global_settings. (xUnit: NOK/M3/S, yUnit: NOK/M3/S)"
river,max_flow_penalty_cost,txy,Input,SHOP_RIVER,14.3.1.0,"The penalty cost for breaking the max_flow constraint. Overrides the default river_flow_penalty_cost defined on global_settings. (xUnit: NOK/M3/S, yUnit: NOK/M3/S)"
river,upstream_flow,txy,Output,SHOP_RIVER,14.3.1.0,"The flow in the river at the upstream enpoint (xUnit: M3/S, yUnit: M3/S)"
river,downstream_flow,txy,Output,SHOP_RIVER,14.3.1.0,"The flow in the river at the downstream enpoint (xUnit: M3/S, yUnit: M3/S)"
river,min_flow_penalty,txy,Output,SHOP_RIVER,14.3.1.0,"The incurred penalty for breaking the min_flow constraint (xUnit: NOK, yUnit: NOK)"
river,max_flow_penalty,txy,Output,SHOP_RIVER,14.3.1.0,"The incurred penalty for breaking the max_flow constraint (xUnit: NOK, yUnit: NOK)"
busbar,load,txy,Input,SHOP_OPEN,14.3.4.0,"Load at the busbar (xUnit: NO_UNIT, yUnit: MW)"
busbar,ptdf,sy,Input,SHOP_OPEN,14.3.4.0,"Power transfer distribution factors describing change in flow for each ac line relative to change in generation at the busbar (xUnit: NO_UNIT, yUnit: NO_UNIT)"
busbar,energy_price,txy,Output,SHOP_OPEN,14.3.4.0,"Dual value for the energy balance constraint at the busbar (xUnit: NO_UNIT, yUnit: NOK/MWH)"
busbar,power_deficit,txy,Output,SHOP_OPEN,14.3.4.0,"Power added to the busbar power balance to cover deficit of energy (xUnit: NO_UNIT, yUnit: MWH)"
busbar,power_excess,txy,Output,SHOP_OPEN,14.3.4.0,"Power subtracted from the busbar power balance to remove excess of energy (xUnit: NO_UNIT, yUnit: MWH)"
ac_line,max_forward_flow,txy,Input,SHOP_OPEN,14.3.4.0,"Maximum transfer capacity in forward direction (xUnit: NO_UNIT, yUnit: MW)"
ac_line,max_backward_flow,txy,Input,SHOP_OPEN,14.3.4.0,"Maximum transfer capacity in backward direction (xUnit: NO_UNIT, yUnit: MW)"
ac_line,n_loss_segments,int,Input,SHOP_OPEN,14.3.4.0,"Number of segments for linearization of quadratic loss (xUnit: NO_UNIT, yUnit: NO_UNIT)"
ac_line,loss_factor_linear,double,Input,SHOP_OPEN,14.3.4.0,"Loss factor multiplied with absolute value of the flow in the line (xUnit: NO_UNIT, yUnit: NO_UNIT)"
ac_line,loss_factor_quadratic,double,Input,SHOP_OPEN,14.3.4.0,"Loss factor multiplied with the square of the flow in the line. The calcualtion is linearized with the number of steps defined by n_loss_segments (xUnit: NO_UNIT, yUnit: NO_UNIT)"
ac_line,flow,txy,Output,SHOP_OPEN,14.3.4.0,"Flow through the line (xUnit: NO_UNIT, yUnit: MW)"
ac_line,forward_loss,txy,Output,SHOP_OPEN,14.3.4.0,"Transmission loss for flow in forward direction of the line (xUnit: NO_UNIT, yUnit: MW)"
ac_line,backward_loss,txy,Output,SHOP_OPEN,14.3.4.0,"Transmission loss for flow in backward direction of the line (xUnit: NO_UNIT, yUnit: MW)"
dc_line,max_forward_flow,txy,Input,SHOP_OPEN,14.3.4.0,"Maximum transfer capacity in forward direction (xUnit: NO_UNIT, yUnit: MW)"
dc_line,max_backward_flow,txy,Input,SHOP_OPEN,14.3.4.0,"Maximum transfer capacity in backward direction (xUnit: NO_UNIT, yUnit: MW)"
dc_line,n_loss_segments,int,Input,SHOP_OPEN,14.3.4.0,"Number of segments for linearization of quadratic loss (xUnit: NO_UNIT, yUnit: NO_UNIT)"
dc_line,loss_constant,double,Input,SHOP_OPEN,14.3.4.0,"Constant power loss in DC line terminals, independent of power flow (xUnit: NO_UNIT, yUnit: NO_UNIT)"
dc_line,loss_factor_linear,double,Input,SHOP_OPEN,14.3.4.0,"Loss factor multiplied with absolute value of the flow in the line (xUnit: NO_UNIT, yUnit: NO_UNIT)"
dc_line,loss_factor_quadratic,double,Input,SHOP_OPEN,14.3.4.0,"Loss factor multiplied with the square of the flow in the line. The calcualtion is linearized with the number of steps defined by n_loss_segments (xUnit: NO_UNIT, yUnit: NO_UNIT)"
dc_line,flow,txy,Output,SHOP_OPEN,14.3.4.0,"Flow through the line (xUnit: NO_UNIT, yUnit: MW)"
dc_line,forward_loss,txy,Output,SHOP_OPEN,14.3.4.0,"Transmission loss for flow in forward direction of the line (xUnit: NO_UNIT, yUnit: MW)"
dc_line,backward_loss,txy,Output,SHOP_OPEN,14.3.4.0,"Transmission loss for flow in backward direction of the line (xUnit: NO_UNIT, yUnit: MW)"
